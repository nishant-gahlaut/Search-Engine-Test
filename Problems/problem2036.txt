b"\n Read problems statements in  Mandarin Chinese  and  Russian.\nLet's solve a realistic problem now! You are given the world map where each country is a polygon on the 2D plane. You may already now that the Global Positioning System can help you to know your current coordinate. So how can you determine which country are you in? That what you need to figure out in this problem. We will give you more detail about input and output description now\n\nThere are N countries which are numbered from 1 to N. Each country is represented by a single simple polygon on the 2D plane. Simple polygon means the boundary of the polygon does not cross itself. You should not confuse simple polygon with convex polygon. There are no two countries share a common point.\n\n\nYou have to answer Q queries, each query requires you to find the polygon that contain a specific point. Note that a point on the boundary of the polygon is considered to be inside the polygon. This problem is set in interactive mode  that means you need to answer each query right after you read it.\n\nInput\n\nThe first line of input contains a single integer N which is the number of countries\nThe ith line in the next N lines describes the boundary of the ith country. It starts with an integer k and then k pairs of integers (where each pair represent a vextex in 2D) follow. A country's boundary can be drawn by connecting these pairs of vertices in the same order as supplied using straight lines (Finally connect last vertex with first vertex).\nThe next line contains a single integer Q which is the number of queries.\nEach line in the next Q lines contains a pair of integer which is the coordinate in the query.\n\nOutput\nFor each query you print out one number which is the index of the country that contains the query point. Print out -1 if there is no country contains that point.\n Attention: the program should clear the output buffer after printing each line. It can be done using fflush(stdout) command or by setting the proper type of buffering at the beginning of the execution - setlinebuf(stdout).\n\nConstraints\n\n1 \xe2\x89\xa4 N \xe2\x89\xa4 100,000\n3 \xe2\x89\xa4 K \xe2\x89\xa4 300,000\nSum of all values of K is less than 300,000 \n1 \xe2\x89\xa4 Q \xe2\x89\xa4 100,000\nAll coordinates are non-negative integer which are not exceed 109 \n\nExample\nInput:\n2\n4 1 4 1 7 7 7 7 4\n3 1 1 5 3 7 1\n3\n2 3\n3 6\n6 2\nOutput:\n-1\n1\n2\n\nExplanation\nExample case 1. The test case is represented in figure below. \nThe first country is the rectangle ABCD and the second country is a triangle EFG. Notice that the point J at coordinate (6, 2) is considered to be inside the second country when it is on the boundary of this country\n\n\n\n\nAuthor:\ntuan_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/QPOINT\n\n\nTags:\n\n               \n                 Balanced Binary Search Tree, Interactive Problems, Computational Geometry\n                 \n                     \n                     Data Structures, Tree Data Structure, Special, Advanced Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3021\n\n\nDate Added:\n26-09-2013\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"