b'\nRead problems statements in Hindi, Mandarin Chinese, Russian, Vietnamese, and Bengali as well.\nThe notorious hacker group "Sed" managed to obtain a string SS from their secret sources. The string contains only lowercase English letters along with the character \'?\'.\nA substring of SS is a contiguous subsequence of that string. For example, the string "chef" is a substring of the string "codechef", but the string "codeh" is not a substring of "codechef".\nA substring of SS is good if it is possible to choose a lowercase English letter CC such that the following process succeeds:\n\nCreate a string RR, which is a copy of the substring, but with each \'?\' replaced by the letter cc. Note that all occurrences of \'?\' must be replaced by the same letter.\nFor each lowercase English letter:\nCompute the number of times it occurs in SS and the number of times it occurs in RR; let\'s denote them by AA and BB respectively. The \'?\' characters in the original string SS are ignored when computing AA.\nCheck the parity of AA and BB. If they do not have the same parity, i.e. one of them is even while the other is odd, then this process fails.\nIf the parities of the number of occurrences in SS and RR are the same for each letter, the process succeeds.\n\nFor different substrings, we may choose different values of CC.\nHelp Sed find the number of good substrings in the string SS.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first and only line of each test case contains a single string SS.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the number of good substrings.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4S\xe2\x89\xa41051\xe2\x89\xa4S\xe2\x89\xa4105\nSS contains only lowercase English letters (\'a\' through \'z\') and \'?\'\nthe sum of |S||S| over all test cases does not exceed 105105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n5\naa?\na???\n????\nasfhaslskfak\naf??avvnfed?fav?faf????\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n6\n4\n2\n27\n\n\nExplanation\nExample case 1: All letters occur an even number of times in SS. The six substrings of SS are "a", "a", "?", "aa", "a?" and "aa?" (note that "a" is counted twice). Which of them are good?\n\n"a" is not good as \'a\' occurs an odd number of times in this substring and there are no \'?\' to replace.\n"?" is also not good as replacing \'?\' by any letter causes this letter to occur in RR an odd number of times.\n"aa" is a good substring because each letter occurs in it an even number of times and there are no \'?\' to replace.\n"a?" is also a good substring. We can replace \'?\' with \'a\'. Then, RR is "aa" and each letter occurs in this string an even number of times. Note that replacing \'?\' e.g. with \'b\' would not work (RR would be "ab", where both \'a\' and \'b\' occur an odd number of times), but we may choose the replacement letter CC appropriately.\n"aa?" is not a good substring. For any replacement letter CC, we find that CC occurs an odd number of times in RR.\n\nExample case 2: We especially note that "a???" is not a good substring. Since all \'?\' have to be replaced by the same character, we can only get strings of the form "aaaa", "abbb", "accc", etc., but none of them match the criteria for a good substring.\nExample case 3: Any substring with even length is good.\n\n\n\nAuthor:\n3\xe2\x98\x85bhvdsi\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SEDPASS\n\n\nTags:\n\n               \n                 String, Bitmasking, Bitwise Operation, ad-hoc\n                 \n                     \n                     Data Structures, Mathematics, Bit Manipulation, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2537\n\n\nDate Added:\n12-12-2020\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'