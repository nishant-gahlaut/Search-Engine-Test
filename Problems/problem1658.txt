b'\nProblem : 2\n\nNormal form of Fibonacci series upto N is A1, A2, A3, ..., AN-1, AN. \nOur special fibonacci series is A1, AN, A2, AN-1, ..., AN/2. \nFor a given N, print the first M numbers for this special Fibonacci series. \nAs the numbers can be very big, print the number modulo 1000000007. \n\n\n\nRules : \n\n\n\nYour solution will not get accepted if you changed whole code or write your own code \n\nBuggy code in C/C++ : \n\n\nPlease copy the following code and paste it into your compiler for debugging.\n\n\n\n\n#include<bits/stdc++.h> \nusing namespace std;\nint modd=1000000007;\nlong long int fibarr[1000001];\nvoid fibb(void)\n{\n   \xc2\xa0 fibarr[0]=0;\n    \xc2\xa0 fibarr[1]=1\n    \xc2\xa0 for(int i=2;i<=1000001;i++)\n   \xc2\xa0 {\n   \xc2\xa0\xc2\xa0     fibarr[i]=(fibarr[i-1]+fibarr[i-2])%mod;\n   \xc2\xa0 }\n}\nint main()\n{\n   \xc2\xa0 int t;\n   \xc2\xa0 cin>>t;\n   \xc2\xa0 fibb();\n   \xc2\xa0 while(t--)\n   \xc2\xa0 {\n     \xc2\xa0\xc2\xa0   int n,m;\n      \xc2\xa0\xc2\xa0  cin>>n>>m;\n       \xc2\xa0\xc2\xa0 int odd=0;\n       \xc2\xa0\xc2\xa0 int even=n-1;\n       \xc2\xa0\xc2\xa0 vector<long long int> res(n);\n       \xc2\xa0\xc2\xa0 for(int i=0;i<=m;i++)\n     \xc2\xa0   {\n           \xc2\xa0\xc2\xa0 if(i%2==1)\n         \xc2\xa0   {\n           \xc2\xa0\xc2\xa0     res.push_back(fibarr[even]);\n            \xc2\xa0\xc2\xa0    even++;\n          \xc2\xa0  }\n           \xc2\xa0 else\n          \xc2\xa0  {\n           \xc2\xa0\xc2\xa0     res.push_back(fibarr[odd]);\n           \xc2\xa0\xc2\xa0     odd--;\n          \xc2\xa0  }\n      \xc2\xa0  }\n      \xc2\xa0  for(int i=0;i<=m;i++)\n      \xc2\xa0  {\n        \xc2\xa0\xc2\xa0    cout<<res[i]<<" ";\n       \xc2\xa0 }\n       \xc2\xa0 cout<<endl;\n   \xc2\xa0 }\n} \nBuggy code in Python : \n\n\nPlease copy the following code and paste it into your compiler for debugging.PAY ATTENTION TO THE NUMBER OF SPACES IN PYTHON PROGRAM \n\n\n\n# cook your dish here \nimport sys\ninput = sys.stdin.readline\nfib=[0]*(10*6 + 1)\nfib[1]=1\nmo=10*9+7\nfor i in range(2,10*6+1):\nfib[i]=(fib(i-1)+fib(i-2))%mod\nfor _ in range(int(input())):\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0    n,m=map(int,input().split())\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0    left=0;right=n-1\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0    for i in range(m):\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0        if(i%2):\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0            print(fib[right],end=" ")\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0            right+=1\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0        else:\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0            print(fib[left],end=" ")\n\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0\xc2\xa0            left+=1\n\n\nBuggy code in JAVA : \n\n\nPlease copy the following code and paste it into your compiler for debugging.\n\n\n\n\nimport java.io.;\nimport java.util.Arrays;\nclass Main\n{\n\tpublic static void main(String[] args) throws Exception{\n\t    Solution obj = new Solution();\n\t    BufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t    int T = Integer.parseInt(in.readLine().trim());\n\t    while(T-->0){\n\t        System.out.println(obj.solve(in.readLine().trim().split(" ")));\n\t    }\n\t}\n}\nclass Solution {\n    int nums[] = new int[1000000];\n    int M = 1000000007;\n    Solution(){\n        nums[0] = 0; nums[1] = 1;\n        for(int i=1; i<1000000-1;i++){\n            nums[i+1] = (nums[i]+nums[i-1])%M;\n        }\n    }\n    String solve(String[] arr){\n        int n = Integer.parseInt(arr[0]), m = Integer.parseInt(arr[1]);\n        int i;\n      \n        StringBuilder s = new StringBuilder();\n        int rev = 0, front = 0;\n        for(i = 0 ; i<=m;i++){\n            if ((i&1)!=0){\n                s.append(nums[front]);\n                front++;\n            } else {\n                s.append(nums[n  - rev]);\n                rev++\n            }\n            s.append(" ");\n        }\n        return s.toString().trim();\n    }\n} \nInput Format\n\nFirst line will contain $T$, number of testcases. Then the testcases follow.\nEach testcase contains of a single line of input, two integers $N$,$M$.\n\nOutput Format\n\nFor each testcase, output $M$ space-separated integers in the order described above, all in a single line.\n\nConstraints\n\n$1 \\leq T \\leq 1000$\n$2 \\leq N \\leq 10^6$\n$1 \\leq M \\leq 10$\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n10 6\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0 34 1 21 1 13\n\n\nExplanation\n\nFor N=10 Fibonacci series would be: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34] \nAnd is the above order it would be: [0, 34, 1, 21, 1, 13, 2, 8, 3, 5] \nTo print first M numbers: 0 34 1 21 1 13 \n\n\n\n\nAuthor:\n4\xe2\x98\x85pratik291219\n\n\nTester:\n2\xe2\x98\x85varun_k49\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/FIBONACCI\n\n\nTags:\n\n               \n                 debugging, fibonacci-numbers, medium, pratik291219, snuc2020\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n16-02-2022\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, PYPY\n\n\n\n\n\nSubmit\n\n'