b'\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given a range of positive integers L,L+1,\xe2\x80\xa6RL,L+1,\xe2\x80\xa6R. Find an integer XX greater than 11 which is coprime with all the integers in this range (does not share any common factors greater than 11 with any of these integers). In addition, XX must not exceed 2\xe2\x8b\x851092\xe2\x8b\x85109.\nIf there are multiple solutions satisfying these conditions, you may find any one of them. It is guaranteed that for the given constraints, at least one such integer XX exists.\nFor example, if L=16L=16 and R=17R=17, then X=9X=9 is coprime with both 1616 and 1717. However, if L=6L=6 and R=12R=12 instead, then X=9X=9 shares a common factor 33 with 66 and 1212 and a common factor 99 with 99.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first and only line of each test case contains two space-separated integers LL and RR.\n\nOutput\nFor each test case, print a single line containing one integer XX which satisfies the above conditions.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41,0001\xe2\x89\xa4T\xe2\x89\xa41,000\n2\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa41062\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4106\n\nSubtasks\nSubtask #1 (100 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n16 17\n16 17\n973360 973432\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n9\n27\n79\n\n\nExplanation\nExample case 1: X=9X=9 does not share any common factors with 1616 and 1717.\nExample case 2: X=27X=27 does not share any common factors with 1616 and 1717.\nExample case 3: X=79X=79 does not share any common factors with any of the integers 973360,973361,\xe2\x80\xa6,973432973360,973361,\xe2\x80\xa6,973432.\n\n\n\nAuthor:\n4\xe2\x98\x85the_hyp0cr1t3\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/COPRIMEX\n\n\nTags:\n\n               \n                 Sqrt N Primality Check, Brute Force\n                 \n                     \n                     Mathematics, Number Theory, Primality Checking, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1631\n\n\nDate Added:\n23-02-2021\n\n\nTime Limit:\n0.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'