b"\n Read problems statements in Mandarin Chinese  and Russian.\nMike likes to invent new functions. The latest one he has invented is called ForbiddenSum. Let's consider how it can be calculated:\nYou are given a set S of positive integers. The integers are not necessary distinct. ForbiddenSum of S equals to the minimal non-negative integer, that can't be returned by the algorithm described below: \n\n\nChoose a random subset S' of S(it can be empty as well);\n\tCalculate the sum of all the numbers of S' and assign it to the variable T;\n\tReturn the value of the variable T.\n\t\n\n\nI.e. if S = {1, 1, 3, 7}, the algorithm can return 0(S' = {}), 1(S' = {1}), 2(S' = {1, 1}), 3(S' = {3}), 4(S' = {1, 3}), 5(S' = {1, 1, 3}), but it can't return 6. So, ForbiddenSum of S equals to 6.\n\n\nInventing of new function is not the only Mike's hobby. Also, he likes to collect rare and unusual arrays. He is going to share with you one of them. \n\n\nFormally, Mike gives you one array A, consisting of N positive integers. After that, he asks you M questions, two integers Li and Ri describe i'th question: What does ForbiddenSum of S={ALi, ALi+1, ..., ARi-1, ARi} equal to?\n\nInput\n \nThe first line contains the only integer N. The second line contains N integers - the array A. A is 1-indexed.\nThe third line contains the only integer M. The following M lines contain two integer numbers 1 \xe2\x89\xa4 Li \xe2\x89\xa4 Ri \xe2\x89\xa4 N each.\n\xc2\xa0\nOutput\nOutput should consists of M lines. The i'th line should contains the answer to the i'th question.\n\xc2\xa0\nConstraints\n1 \xe2\x89\xa4 N, M \xe2\x89\xa4 100,000\n \n1 \xe2\x89\xa4 Ai \xe2\x89\xa4 109\n \n1 \xe2\x89\xa4 A1 + A2 + ... + AN \xe2\x89\xa4 109\n\xc2\xa0\nExample\nInput:\n5\n1 2 4 9 10\n5\n1 1\n1 2\n1 3\n1 4\n1 5\n\nOutput:\n2\n4\n8\n8\n8\n\n\xc2\xa0\nExplanation\nIn the example test there are M=5 questions. We won't describe all of them, only two ones.\nThe first question\nIn the first test case S equals to {1}. The answer is 2, because we can recieve 1 in case the algorithm chooses S' = {1}. But there are no chances to receive 2.\nThe second question\nIn the first test case S equals to {1, 2}. The answer is 4, because we can recieve 1 in case the algorithm chooses S' = {1}, 2 in case the algorithm chooses S' = {2} and 3 in case the algorithm chooses S' = {1, 2}. But there are no chances to receive 4.\n\n\n\nAuthor:\n6\xe2\x98\x85kostya_by\n\n\nTester:\n6\xe2\x98\x85white_king\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/FRBSUM\n\n\nTags:\n\n               \n                 Persistent Segment Trees, Binary Search\n                 \n                     \n                     Advanced Data Structures, Persistent Structures, Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2439\n\n\nDate Added:\n18-10-2013\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"