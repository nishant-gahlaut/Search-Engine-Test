b'\nYou are given a string SS, each character of which is either NN or PP. In one move, you can perform the following operation:\n\nPick an index 1\xe2\x89\xa4i\xe2\x89\xa4|S|1\xe2\x89\xa4i\xe2\x89\xa4|S| and flip SiSi, i.e, if Si=NSi=N set it to PP and vice versa.\n\nFind the minimum number of moves required to obtain a string such that there exists a way to split it into several continuous substrings, each of which is either PP or NPNP, and the number of PP substrings in this splitting equals the number of NPNP substrings.\nFor example, NPPNPP and PNPPNPPNPPNP can be split this way (into NPNP + PP and PP + NPNP + PP + NPNP respectively) but NNPPNNPP cannot.\nInput Format\n\nThe first line of input contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.\nThe first and only line of input of each test case contains the string SS.\n\nOutput Format\nFor each test case, output a single line containing one integer \xe2\x80\x94 the minimum number of moves required to transform the string into the desired form.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa43.5\xe2\x8b\x851041\xe2\x89\xa4T\xe2\x89\xa43.5\xe2\x8b\x85104\n3\xe2\x89\xa4|S|\xe2\x89\xa41053\xe2\x89\xa4|S|\xe2\x89\xa4105\nSS contains only characters NN and PP\n|S||S| is a multiple of 33\nSum of |S||S| over all test cases does not exceed 106106\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\nNNN\nPNP\nNPNPNPNNP\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n0\n2\n\n\nExplanation\nTest Case 11: Flip the second and third characters so that the string becomes NPPNPP, which can be broken into substrings NPNP + PP. Here the count of substrings of both types is 11.\nTest Case 22: The original string can already be split into PP + NPNP, so no more moves are required.\nTest Case 33: Flip the first and eighth characters so that the string becomes PPNPNPNPPPPNPNPNPP, which can be broken into substrings PP + PP + NPNP + NPNP + NPNP + PP. Here the count of substrings of both types is 33. \n\n\n\nAuthor:\ndaanish_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/P_NP\n\n\nTags:\n\n               \n                 String, ad-hoc\n                 \n                     \n                     Data Structures, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2448\n\n\nDate Added:\n8-12-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'