b'\nThe alternating sum of an array A=[A1,A2,\xe2\x80\xa6,AN]A=[A1,A2,\xe2\x80\xa6,AN] is defined to be\nA1\xe2\x88\x92A2+A3\xe2\x88\x92\xe2\x80\xa6+(\xe2\x88\x921)N\xe2\x88\x921ANA1\xe2\x88\x92A2+A3\xe2\x88\x92\xe2\x80\xa6+(\xe2\x88\x921)N\xe2\x88\x921AN\nYou are allowed to perform the following operation at most once on AA:\n\nChoose a subarray of AA of odd length, remove this subarray from the original array, and concatenate it at the end of the remaining array. In other words, pick 1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N such that R\xe2\x88\x92L+1R\xe2\x88\x92L+1 is odd, and transform AA into the array [A1,A2,\xe2\x80\xa6,AL\xe2\x88\x921,AR+1,\xe2\x80\xa6,AN,AL,AL+1,\xe2\x80\xa6,AR][A1,A2,\xe2\x80\xa6,AL\xe2\x88\x921,AR+1,\xe2\x80\xa6,AN,AL,AL+1,\xe2\x80\xa6,AR].\n\nFor example, if the original array is [1,2,3,4,5][1,2,3,4,5], two possible moves are:\n\nChoose the subarray [1][1] and move it to the end to obtain [2,3,4,5,1][2,3,4,5,1]\nChoose the subarray [2,3,4][2,3,4] and move it to the end to obtain [1,5,2,3,4][1,5,2,3,4]\n\nGiven that you can perform this operation at most once, what is the maximum possible alternating sum the resulting array can achieve?\nInput Format\n\nThe first line contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN, denoting the number of elements in AA.\nThe second line of each test case contains NN space-separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN, the elements of AA.\n\nOutput Format\nFor each test case, print a single line containing one integer \xe2\x80\x94 the maximum possible alternating sum obtainable after performing the given operation at most once.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n3\xe2\x89\xa4N\xe2\x89\xa41053\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Ai\xe2\x89\xa41091\xe2\x89\xa4Ai\xe2\x89\xa4109\nThe sum of NN over all test cases does not exceed 106106.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n3\n1 5 2\n5\n1 10 1 5 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n4\n13\n\n\nExplanation\n\nTest Case 11: Move subarray [5][5] to the end to obtain the array [1,2,5][1,2,5]. The alternating sum of this array is 1\xe2\x88\x922+5=41\xe2\x88\x922+5=4, and no larger is possible.\nTest Case 22: Move subarray [1][1] starting at index 11 to the end to obtain the array [10,1,5,2,1][10,1,5,2,1]. The alternating sum of this array is 10\xe2\x88\x921+5\xe2\x88\x922+1=1310\xe2\x88\x921+5\xe2\x88\x922+1=13, and no larger is possible.\n\n\n\n\nAuthor:\n6\xe2\x98\x85lavish315\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ALTERSUM\n\n\nTags:\n\n               \n                 1D Arrays, Pre processing, Prefix Sum, Suffix Sum\n                 \n                     \n                     Data Structures, Arrays, Advanced Algorithms, Algorithms, Simple Algos\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2273\n\n\nDate Added:\n10-12-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'