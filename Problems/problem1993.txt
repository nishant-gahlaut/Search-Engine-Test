b"\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\nCherry has discovered the Garden of Magical Tulips while going on a walk. The garden can be described as N nodes connected by N-1 trails. The nodes are numbered from 1 to N. Each trail i connects two different nodes, ui and vi and has length Li. It is possible to visit all the nodes starting from any node using a sequence of trails.\n Magical tulips like to grow alone, without being disturbed. So, every node has exactly one tulip growing there peacefully and a tulip never withers once it is fully grown. If a fully grown tulip is picked, a new one will grow in the same spot if it is left undisturbed for X contiguous days. \n\n\nSometimes, when Cherry goes for a walk, she visits the garden to collect some tulips for her beloved Jimma, who is always waiting at the window to see Cherry pass by. The number of tulips she collects on a particular day depends on her mood. She gets bored while walking on long trails, so on day dj, Cherry will start at a node uj and visit all the nodes she can reach while taking only the trails whose length does not exceed kj. She will pick all the fully grown tulips she can find. But in the process, she might visit some nodes which do not have a fully grown tulip yet. These tulips will get upset and grow fully only after X days if Cherry doesn't disturb them again before that.\ni.e. if Cherry does not visit that node again before the day dj+X, then it will have a fully grown tulip on that day. On day d1, all the nodes have fully grown tulips.\n \nCherry has never been to school and is not very good at counting, so she always wonders how many tulips she has collected. Please help Cherry figure out the number of tulips she collects for the next Q days she visits the garden.\nInput\n\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a single integer N. The next N-1 lines describe the edges. The i+1th line contains three space separated integers ui, vi and Li.\nThe next line contains two space separated integers Q and X and is followed by Q lines each describing the next Q days Cherry visits the garden. The jth such line contains three space separated integers dj, uj and kj.\n\nOutput\n\nFor each test case, output Q lines.\nThe jth line of each test case should contain the number of tulips Cherry collects on day dj. \n\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 10\n1 \xe2\x89\xa4 N,Q \xe2\x89\xa4 105\n1 \xe2\x89\xa4 ui,vi \xe2\x89\xa4 N\n1 \xe2\x89\xa4 Li,kj \xe2\x89\xa4 108\n1 \xe2\x89\xa4 d1 \xe2\x89\xa4 108\ndj-1 < dj \xe2\x89\xa4 108 for 2 \xe2\x89\xa4 j \xe2\x89\xa4 Q\n\nSubtasks\n\nSubtask 1:  X = 1 (15 points)\nSubtask 2:  1 \xe2\x89\xa4 X \xe2\x89\xa4 108 (85 points)\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n3 \n1 2 7\n3 1 10\n3 4\n5 2 8\n7 1 20\n13 2 3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n1\n1\n\n\nExplanation\nExample case 1. There are 3 queries. The tulips take 4 days to grow fully. In the first query, Cherry will visit nodes 1 and 2, because the trail 3-1 has length greater than 8. Both the nodes will have fully grown tulips. After Cherry picks them, the tulips will grow back on day 5+4, if Cherry doesn't visit them again. So the output is 2.\n In the second query, Cherry will visit all the trails because all of them have length less than 20. The tulips at 1,2 haven't grown back yet and now all the tulips will take 4 more days. There is a tulip at 3. So the output is 1.\n In the third query, on day 13, all the tulips have grown back, but Cherry will not use any of the trails because both of them have length greater than 3. So, she will collect only one tulip - the tulip at 2.\n\n\n\nAuthor:\n6\xe2\x98\x85meteora\n\n\nTester:\n4\xe2\x98\x85furko\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TULIPS\n\n\nTags:\n\n               \n                 Disjoint Set Union, Lazy Propagation, Square Root Decomposition, Binary lifting, Observation\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Segment Trees, Advanced Algorithms, Algorithms, Graph Algos, Lowest Common Ancestor\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2874\n\n\nDate Added:\n10-02-2016\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"