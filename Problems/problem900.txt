b'\nRead problem statements in Bengali, Russian, Mandarin and Vietnamese as well.\nA string SS whose characters are one of the following 5: ((, )), ++, \xe2\x88\x92\xe2\x88\x92 and ??, is said to be a valid string if one of the following conditions holds:\n\nS=\xc2\xa0?S=\xc2\xa0?\nS=(x+y)S=(x+y), where xx and yy are valid strings.\nS=(x\xe2\x88\x92y)S=(x\xe2\x88\x92y), where xx and yy are valid strings.\n\nFor example, strings ??, (?\xe2\x88\x92?)(?\xe2\x88\x92?), (?+(?\xe2\x88\x92?))(?+(?\xe2\x88\x92?)) are valid strings, while strings (?\xe2\x88\x92+)(?\xe2\x88\x92+), ????, (?)(?), ?\xe2\x88\x92??\xe2\x88\x92?, (?+?))(?+?)) are not.\nThe power of a valid string SS is defined to be the maximum value attainable by replacing each ?? in it by either 00 or 11 and evaluating the resulting expression.\nFor example, the power of (?\xe2\x88\x92?)(?\xe2\x88\x92?) is 11 because we can obtain (1\xe2\x88\x920)(1\xe2\x88\x920) which evaluates to 11.\nYou are given a valid string SS, and QQ queries on it. Each query is represented by two integers LL and RR (L\xe2\x89\xa4RL\xe2\x89\xa4R).\nYour task is to find the power of the substring SL,SL+1,\xe2\x80\xa6,SRSL,SL+1,\xe2\x80\xa6,SR. It is guaranteed that this substring is a valid string.\nNote: The input of this problem is large, so use fast input/output methods.\nInput Format\n\nThe first line of input contains an integer TT, denoting the number of test cases. The description of TT test cases follows:\nThe first line of each test case contains the string SS.\nThe next line contains an integer QQ, representing the number of queries to answer.\nEach of the following QQ lines contains two space-separated integers, LL and RR, representing the query.\n\nOutput Format\nFor each test case, print one line containing QQ space-separated integers, the ii-th of which represents the answer to the ii-th query.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa410001\xe2\x89\xa4T\xe2\x89\xa41000\n1\xe2\x89\xa4|S|\xe2\x89\xa41061\xe2\x89\xa4|S|\xe2\x89\xa4106\n1\xe2\x89\xa4Q\xe2\x89\xa41061\xe2\x89\xa4Q\xe2\x89\xa4106\n1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4|S|1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4|S|\n\xe2\x88\x91|S|\xe2\x88\x91|S| and \xe2\x88\x91Q\xe2\x88\x91Q over all test cases does not exceed 106106.\n\nSubtasks\nSubtask #1 (20 points):\n\n1\xe2\x89\xa4|S|\xe2\x89\xa410001\xe2\x89\xa4|S|\xe2\x89\xa41000\n1\xe2\x89\xa4Q\xe2\x89\xa410001\xe2\x89\xa4Q\xe2\x89\xa41000\n\xe2\x88\x91|S|\xe2\x88\x91|S| and \xe2\x88\x91Q\xe2\x88\x91Q over all test case does not exceed 104104.\n\nSubtask #2 (80 points):\n\nOriginal constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n(?+?)\n2\n2 2\n1 5\n(?-(?-?))\n2\n1 9\n4 8\n(?-(?+?))\n1\n1 9\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1 2\n2 1\n1\n\n\nExplanation\nTest case 1:\n\nQuery 1: Power of the string ?? is 11, as it can be converted to 11.\nQuery 2: Power of the string (?+?)(?+?) is 22, as it can be converted to (1+1)(1+1).\n\nTest case 2:\n\nQuery 1: Power of the string (?\xe2\x88\x92(?\xe2\x88\x92?))(?\xe2\x88\x92(?\xe2\x88\x92?)) is 22, as it can be converted to (1\xe2\x88\x92(0\xe2\x88\x921))(1\xe2\x88\x92(0\xe2\x88\x921)).\nQuery 2: Power of the string (?\xe2\x88\x92?)(?\xe2\x88\x92?) is 11, as it can be converted to (1\xe2\x88\x920)(1\xe2\x88\x920).\n\nTest case 3:\n\nQuery 1: Power of the string (?\xe2\x88\x92(?+?))(?\xe2\x88\x92(?+?)) is 11, as it can be converted to (1\xe2\x88\x92(0+0))(1\xe2\x88\x92(0+0)).\n\n\n\n\nAuthor:\n5\xe2\x98\x85mexomerf\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/WLDRPL\n\n\nTags:\n\n               \n                 Stacks, String Parsing, Dynamic Programming\n                 \n                     \n                     Data Structures, Mathematics, Formal Language, Parsing, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2317\n\n\nDate Added:\n31-10-2021\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'