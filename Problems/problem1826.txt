b'\nChef JJ is a fan of random events and calculating probabilities.\nHe designed a machine called the binary string randomizer (BSRand). BSRand takes a binary string AA (say, of length N) as input and then generates a binary string B (of the same length N) as output using the following algorithm:\nFor each i from 1 to N,\n\nUniformly randomly choose an integer j between 1 and N.\nUniformly randomly choose an integer k between 1 and N.\nSet Bi:=Aj\xe2\x8a\x95Ak (where \xe2\x8a\x95 represents the bitwise XOR operation)\n\nGiven a binary string A, Chef JJ passes it through BSRand T times (i.e, first he passes the binary string A through the BSRand, then he passes the resultant binary string through BSRand again, and so on. This is done T times in total). Calculate the probability that the final binary string obtained is B.\nYou need to print the probability of getting binary string B modulo 998244353. Formally, let M=998244353. It can be shown that the answer can be expressed as an irreducible fraction pq, where p and q are integers and q\xe2\x89\xa20(modM). Output p\xe2\x8b\x85q\xe2\x88\x921(modM). In other words, output the (unique) integer x which satisfies 0\xe2\x89\xa4x<M and x\xe2\x8b\x85q\xe2\x89\xa1p(modM).\nInput Format\n\nThe first line of the input contains two integers N and T - the length of the binary strings A and B and the number of times chef JJ passes the binary string through BSRand, respectively.\nThe second line contains the binary string A.\nThe third line contains the binary string B.\n\nOutput Format\nOutput the probability of getting binary string B from binary string A after passing it through BSRand T times, modulo 998244353.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa4100\n1\xe2\x89\xa4T\xe2\x89\xa4106\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2 1\n01\n11\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n748683265\n\n\n\n                        Sample Input 2\n                        \n\n\n\n\n\n2 1\n00\n11\n\n\n\n                        Sample Output 2\n                        \n\n\n\n\n\n0\n\n\n\n                        Sample Input 3\n                        \n\n\n\n\n\n2 2\n11\n00\n\n\n\n                        Sample Output 3\n                        \n\n\n\n\n\n1\n\n\nExplanation\nTest Case 1: For i=1, we notice that the BSRand can select the following combinations of (j,k): (1,1),(1,2),(2,1),(2,2). Out of these 4 combinations, we see that only 2 of them give 1 as result. Therefore, the probability that B1 becomes 1 is 12.\nFor i=2, similarly the the probability that B2 becomes 1 is 12.\nTherefore the probability that the final string is 11 is 12\xe2\x8b\x8512=14=748683265(mod998244353).\nTest Case 2: It can be proved that there is no way to get string 11 from 00.\n\n\n\nAuthor:\n6\xe2\x98\x85jeevanjyot\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BINSTRRAND\n\n\nTags:\n\n               \n                 Modulo Multiplicative Inverse, Matrix Exponentiation\n                 \n                     \n                     Mathematics, Modular Arithmetic, Matrices, Matrix Multiplication\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3156\n\n\nDate Added:\n7-12-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'