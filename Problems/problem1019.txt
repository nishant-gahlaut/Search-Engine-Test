b'\nEach palindrome can be always created from the other palindromes, if a single character is also a palindrome. For example, the string "bobseesanna" can be created by some ways:\n* bobseesanna = bob + sees + anna\n* bobseesanna = bob + s + ee + s + anna\n* bobseesanna = b + o + b + sees + a + n + n + a\n...\nWe want to take the value of function CountPal(s) which is the number of different ways to use the palindromes to create the string s by the above method.\nInput\nThe string s\nOutput\nThe value of function CountPal(s), taking the modulo of 1 000 000 007 (109+7)\nLimitations\n0 < |s| <= 1000\n\n                        Sample Input 1\n                        \n\n\n\n\n\nbobseesanna\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n18\n\n\n\n\n\nAuthor:\nanhdq_adm\n\n\nTester:\n4\xe2\x98\x85anshuman_singh\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/COUNTPAL\n\n\nTags:\n\n               \n                 Modular Arithmetic, Dynamic Programming\n                 \n                     \n                     Mathematics, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1631\n\n\nDate Added:\n6-08-2010\n\n\nTime Limit:\n0.1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'