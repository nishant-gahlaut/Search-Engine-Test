b"\n Read problems statements in Mandarin Chinese and Russian as well.\nMike is a cool kid, so he's the most popular person in his school. All the girls want to be with him while all the boys want to be like him.\nThere are N persons in Mike's school. No person in the school has a name(except Mike), but all of them have a unique ID integer number for the range[1..N]. Mike's ID equals to 1. Also, each person(except Mike) has his/her personal idol, who is another person from the school. Finally, each person X has an integer number AX.\nLet's define functions F and G for a person with ID equals to X:\n\n\nIf X = 1(which means that person X is Mike), then FX = AX and GX = 1;\nOtherwise, let Y be the personal idol for X. \n\nIf FY + 1 < AX, then FX = AX and GX = 1;\nIf FY + 1 > AX, then FX = FY + 1 and GX = GY;\nIf FY + 1 = AX, then FX = FY + 1 and GX = GY + 1.\n\n\n\nIt's guaranteed, that it's possible to calculate functions F and G for every person in the school.\n\nYou are to write a program, that can efficiently process queries of the following types:\n\n0 X NEW_VALUE - change the value of AX to NEW_VALUE;\n1 X - calculate FX and GX.\n\n\nInput\nThe first line of the input contains two integers N and Q, denoting the number of the persons in Mike's school and the number of queries to process.\nThe second line contains N integers Ai, denoting A1, A2, ..., AN.\nThe third line contains N - 1 integers Pi, denoting the personal idols of persons with IDs equal to 2, 3, ..., N. 1 \xe2\x89\xa4 Pi < i. \nThe next Q lines contain information about the queries. The format of the queries is the same with the one described in the statement.\nOutput\nFor each query of the second type, output a single line containing two integers, FX and GX.\nConstraints\n1 \xe2\x89\xa4 N \xe2\x89\xa4 100000;\n1 \xe2\x89\xa4 Q \xe2\x89\xa4 300000;\n1 \xe2\x89\xa4 Ai \xe2\x89\xa4 109, for each person;\n1 \xe2\x89\xa4 X \xe2\x89\xa4 N, 1 \xe2\x89\xa4 NEW_VALUE \xe2\x89\xa4 109, for each query of the first type.\nExample\nInput:\n5 2\n1 2 3 4 5\n1 2 3 4\n1 5\n0 1 100\n\nOutput:\n5 5\n\nExplanations\n\nIn the input, before the second query, F's and G's equals to the following:\n\n\n\n\nID\nF\nG\n\n\n1\n1\n1\n\n\n2\n2\n2\n\n\n3\n3\n3\n\n\n4\n4\n4\n\n\n5\n5\n5\n\n\n\n\nAfter the second query, F's and G's equals to the following:\n\n\n\n\nID\nF\nG\n\n\n1\n100\n1\n\n\n2\n101\n1\n\n\n3\n102\n1\n\n\n4\n103\n1\n\n\n5\n104\n1\n\n\n\n\n\n\nAuthor:\n6\xe2\x98\x85kostya_by\n\n\nTester:\n2\xe2\x98\x85rustinpiece\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/IDOLS\n\n\nTags:\n\n               \n                 Trees, Segment Trees, HLD, DFS Order\n                 \n                     \n                     Data Structures, Graphs, Advanced Data Structures, Advanced Tree Structures, Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals, DFS\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3005\n\n\nDate Added:\n31-05-2014\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"