b'\n Read problems statements in Mandarin Chinese  and Russian.\nGiven a directed tree with N nodes. You need to process M queries.\nEach node has a key and a value, a node is referenced by its key. N nodes have keys from 0 to N-1.\nRoot always has the key equal to 0. Queries can be of the following 4 types:\n1. Given a key of a node present in the tree, append a child node to it. The new node gets the smallest never-used positive integer as its key. The value of the new node will be given in the input.\n2. Given a key of a node(call it A) present in the tree. Add value to the value of all the nodes present in the subtree rooted at A.\n3. Given a key of a node(call it A) present in the tree. Remove the subtree rooted at A from the tree.\n4. Given a key of a node(call it A) present in the tree. Output the sum of values of all the nodes in subtree rooted at A.\nInput is encoded:\nKeys in M Queries of the input are encoded in the following way:\nLet SPECIAL = 0 initially. Whenever a query of the type 4 occurs, SPECIAL is updated to the result of that query.\nAll the keys given in queries are encoded, in order to decode them you need to add SPECIAL to it.\nThat is, you are given encoded_key as input, to get key use the formula key = SPECIAL + encoded_key.\nInput\nFirst line of input has N, the number of nodes.\nSecond line has N integers, the values of given N nodes respectively.\nThen, N-1 lines follow, each has two integers u, v. which specifies an edge from u to v.\nNext line contains a single integer M, the number of queries.\nEach query consists of 2 lines, First line has the the type of query, second line is as follows:\nFor queries 1 and 2, there are two integers, first one represents the key of a node in tree, second one represents the value.\nFor queries 3 and 4, there is a single integer, which represents the key of a node in tree.\n\nOutput\nFor each query of type 4, output the required answer.\nConstraints\n\n1 \xe2\x89\xa4 N \xe2\x89\xa4 10^5\n1 \xe2\x89\xa4 M \xe2\x89\xa4 10^5\n0 \xe2\x89\xa4 u < N\n0 \xe2\x89\xa4 v < N, u is not equal to v\nAll the keys in the input are valid\nIf the type of the query is 3, the the key is nonzero.\nAll the rest numbers in the input are in the range [-1000, 1000]\n\nExample\nInput:\n2\n10 20\n0 1\n4\n4\n0\n1\n-30 5\n2\n-30 1\n4\n-30\n\nOutput:\n30\n38\n\nExplanation\nQuery #1\ntype = 4 encoded_key = 0\nInitially SPECIAL = 0\nkey = encoded_key + SPECIAL = 0\nvalue at 0 + value at 1 = 10 + 20 = 30 is the answer\nNow SPECIAL is updated to 30\nQuery #2\ntype = 1 encoded_key = -30 value = 5 \nSPECIAL = 30 \nkey = encoded_key + SPECIAL = -30 + 30 = 0\nSo we add a child node(with the key = 2) to the node with the key 0, the child node gets the value of 5\n\nEDITS MADE:\nFirstly, sorry for the mistake.\nOld : Let SPECIAL = 0 initially. Whenever a query of the type 4 occurs, SPECIAL is increased by the result of that query.\nNew : Let SPECIAL = 0 initially. Whenever a query of the type 4 occurs, SPECIAL is updated to the result of that query.\n\n\n\nAuthor:\n6\xe2\x98\x85anudeep2011\n\n\nTester:\n6\xe2\x98\x85xcwgf666\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/ANUDTQ\n\n\nTags:\n\n               \n                 Segment Trees, Splay Tree, DFS, Offline Queries\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Algorithms, Graph Algos, Traversals, Queries\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2713\n\n\nDate Added:\n3-02-2014\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'