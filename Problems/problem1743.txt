b"\nRead problem statements in Mandarin Chinese Vietnamese, and Russian\nUtkarsh is a cool guy and had fun throughout the year. Now his exams are approaching and he hasn't studied for them at all! \nUtkarsh has to read several chapters for his exams, but he is smart and realized that he doesn't actually need to read each and every one of them thoroughly. Several chapters share the same content, so he can skip some parts of some chapters to save time.\nEach chapter is a non-empty string of lowercase characters. Utkarsh has to read N distinct chapters for the exam, denoted by the set S={S1,S2,\xe2\x80\xa6,SN}. He will read all N chapters in some order. \nFor each chapter Si, he can skip reading some part of it by considering at most two other chapters that he has read already.\nFormally, he has 3 options for the chapter Si: \n\nSuppose there exist two chapters Sj,Sk\xe2\x88\x88S (j can be equal to k) that he has previously read, and three (possibly empty) strings of lowercase alphabets A, B, and C such that \nSi=A+Sj+B+Sk+C (where + denotes string concatenation). Then he has to read only |A|+|B|+|C| characters. \nSuppose there exists a chapter Sj\xe2\x88\x88S that he has previously read, along with two (possibly empty) strings A and B of lowercase alphabets such that Si=A+Sj+B. Then he has to read only |A|+|B| characters.\nFinally, he can also choose to read chapter Si completely, requiring |Si| characters.\n\nNote that there is no forced hierarchy among the options, i.e, Utkarsh is free to choose how he reads Si chapter among all choices available to him.\nFind the minimum amount of characters Utkarsh has to read in total if he chooses an optimal ordering of the chapters.\nInput Format\n\nThe first line of input contains a single integer T, the number of test cases. The description of T test cases follows.\nEach test case consists of N+1 lines.\nThe first line contains a single integer N, the number of chapters.\nEach of the following N lines contains a non-empty lowercase string.\n\nOutput Format\nFor each test case, print a single line containing one integer denoting the minimum number of characters Utkarsh has to read over all chapters.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4103\n1\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4|Si|\xe2\x89\xa43\xe2\x8b\x85105\nSum of |Si| over all test cases doesn't exceed 2\xe2\x8b\x85106.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n5\na\naba\naabc\nbc\nc\n2\naaa\nbb\n3\nz\nzz\nzzz\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n5\n5\n1\n\n\nExplanation\nTest case 1:\nUkarsh reads the chapters in the following order :\n\na (reads 1 character)\nc (reads 1 character)\naba=a+b+a (first and last a already read, reads 1 character)\nbc=b+c (c already read, reads 1 character)\naabc=a+a+bc (first a and bc already read, reads 1 character)\n\nThus, 5 characters are read in total.\nTest case 2: \nUkarsh reads the chapters in the following order :\n\naaa (reads 3 characters)\nbb (reads 2 characters)\n\nThus 5 characters are read in total.\nTest case 3:\nUkarsh reads the chapters in the following order :\n\nz (reads 1 character)\nzz=z+z (first and last z already read,reads 0 characters)\nzzz=z+zz (z and zz are already read,reads 0 characters)\n\nThus 1 character is read in total.\n\n\n\nAuthor:\ndaanish_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/HLPUTKRSH\n\n\nTags:\n\n               \n                 Suffix Arrays, Disjoint Set Union, Aho Corasick, Longest Common Prefix\n                 \n                     \n                     Advanced Data Structures, Suffix Structures, Advanced Algorithms, String Matching, Algorithms, Dynamic Programming, DP on sequences\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n26-10-2021\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"