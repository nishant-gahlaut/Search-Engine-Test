b"\nA rating system for cricket players is built by Mr.Bugs Bunny and as expected, it has lot of bugs. The initial ratings of N players  ( numbered 0 to N-1 ) are given and we refer it as array V0. The system is expected to answer simple queries of the form, find the top-2 maximum ratings among players from i to j ( inclusive ). Top-2 maximum means the first two elements of the ratings sorted in non-increasing order.\nDue to bugs in the system, an unexpected update occurs after output of each query and this creates a new version of the ratings array V. We refer the Kth version of the ratings arrays as VK. Also, for a query, the system queries on some previous version of V. Mr. Bunny gave the exact details of the bugs as follows,\n\nGiven Q queries numbered 1 to Q in order and values of A B C D M,\n\nFor a query number K, the query is made on the array Vt , where t = ( A * R1 + D ) % K, and R1 is the maximum rating in the query range of the previous query. For the first query, consider R1 = 0.\n\n\nFor a query number K, let R1 and R2 be the top-2 maximum ratings ( R1 \xe2\x89\xa5 R2 ). After it outputs this answer, the system changes the rating of a player. Specifically, the rating of player number ( B * R1 + D ) % N is changed to ( C * R2 + D ) % M. This update is on the array V(K-1) and a new version VK is created.\n\n\n\nYou can not fix these bugs, but can you guess the output produced by this system. For more clarity, check the pseudo code below.\nread array V0;\nR1 = 0, R2 = 0;\nfor K = 1 to Q\n     t = ( A * R1 + D ) % K\n     read qi qj\n     R1, R2 = top-2 Maximum ratings in range [qi..qj] in the array Vt\n     Output R1 R2\n     VK = Update array V(K-1) by changing V(K-1) [ ( B * R1 + D ) % N ] = ( C * R2 + D ) % M\nend-for\n\n\nNote: Take care of potential overflows in intermediate calculations in the equations mentioned above. The authors algorithm doesn't depend on the values of A B C D M, they are just used to generate some values.\n\nInput\nFirst line contains 6 integers N M A B C D and the second line contains N integers, the initial ratings of N players in order ( 2 \xe2\x89\xa4 N, A, B, C, D \xe2\x89\xa4 100,000 ;  0 \xe2\x89\xa4 V0[i] , M < 1,000,000,000 ; M \xe2\x89\xa5 2 ). Next line contains Q ( number of queries 1 \xe2\x89\xa4 Q \xe2\x89\xa4 100,000 ), followed by Q lines. The Kth line in this has the query number K, and has two integers qi qj ( 0 \xe2\x89\xa4 qi < qj < N ).\n\nOutput\nFor each query, output the top-2 maximum ratings R1 R2 ( R1 \xe2\x89\xa5 R2 ) in a new line.\n\nExample\nInput:\n6 1000 2 2 2 2\n1 2 3 4 5 6\n4\n0 5\n0 3\n1 3\n2 5\n\nOutput:\n6 5\n4 3\n12 4\n12 8\n\n\nExplanation:\nV0 = { 1, 2, 3, 4, 5, 6 }\n\n1.) t = 0 --> top-2 max of V0[0..5] =  6 ,  5\nUpdating V0[2] with 12\nV1 = { 1, 2, 12, 4, 5, 6 }\n\n2.) t = ( A(=2) * R1(=6) + D(=2) ) % 2 = 0 --> top-2 max of V0[0..3] =  4 ,  3\nR1 = 4, R2 = 3\nUpdating index = ( B(=2) * R1(=4) + D(=2) ) % N(=6) = 4 with value =  ( C(=2) * R2(=3) + D(=2) ) % M(=1000) = 8\nV2 = { 1, 2, 12, 4, 8, 6 }\n\n3.) t = 1 --> top-2 max of V1[1..3] =  12 , 4\nUpdating V2[2] = 10\nV3 = { 1, 2, 10, 4, 8, 6 }\n\n4.) t = 2 --> top-2 max of V2[2..5] =  12 , 8\nUpdating V3[2] = 18\nV4 = { 1, 2, 18, 4, 8, 6 }\n\n\n\nAuthor:\nanil_adm\n\n\nTester:\nMaksflow\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TMRATING\n\n\nTags:\n\n               \n                 Persistent Segment Trees, Online Queries\n                 \n                     \n                     Advanced Data Structures, Persistent Structures, Algorithms, Queries\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2450\n\n\nDate Added:\n11-04-2012\n\n\nTime Limit:\n0.658371 - 1.36 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"