b"\nHey, you've got a new mission! This time your client ask you to write a editor and it should run fast! However the client's request is somehow strange, but they give a lot of money so your boss ask you to finish it as fast as possible.\nThis editor deal with a string S. And the length |S| of the string S would never be smaller than 10. This editor must support the following 7 operations quickly. Here the string would be indexed starting at 0.\n\nINSERT_LEFT c : insert character c at the beginning of S\nINSERT_RIGHT c : insert character c at the end of S\nINSERT_MIDDLE c : insert character c at the middle of S (before the (|S| div 2)-th character)\nDELETE_LEFT : delete the first character of S\nDELETE_RIGHT : delete the last character of S\nDELETE_MIDDLE : delete the middle character of S (the (|S| div 2)-th character)\nQUERY q : print how many times the string q occur in S. (overlap is allowed)\n\nHere div means integer division, that is, |S| div 2 = floor(|S| / 2).\nInput\nThe first line of input contains the initial string SInit. The second line contains one integer Q, denoting the number of operations. Then each of the next Q lines contains an operation with the format mentioned above.\nOutput\nFor each QUERY operation, print the answer in a line.\nConstraints\n\n1 \xe2\x89\xa4 Q \xe2\x89\xa4 150000 (1.5 * 105)\n|SInit| = 10\nSInit, q contain only lower Latin letters ('a'-'z').\nc is a lower Latin letter ('a'-'z').\nThe total length of the string q over all the queries does not exceed 1500000 (1.5 * 106).\nThe DELETE_LEFT, DELETE_RIGHT, DELETE_MIDDLE operations do not appear when |S| = 10.\n\nExample\nInput:\nbbabaaaaab\n12\nINSERT_MIDDLE b\nINSERT_LEFT b\nINSERT_MIDDLE b\nINSERT_MIDDLE b\nINSERT_RIGHT a\nINSERT_LEFT a\nINSERT_MIDDLE b\nINSERT_LEFT a\nINSERT_MIDDLE a\nQUERY bbaaa\nDELETE_MIDDLE\nDELETE_MIDDLE\n\nOutput:\n1\n\nExplanation\nIn the sample, the string |S| will be changed as follows:\nbbabaaaaab (SInit)\nbbababaaaab (after INSERT_MIDDLE b)\nbbbababaaaab (after INSERT_LEFT b)\nbbbababbaaaab (after INSERT_MIDDLE b)\nbbbababbbaaaab (after INSERT_MIDDLE b)\nbbbababbbaaaaba (after INSERT_RIGHT a)\nabbbababbbaaaaba (after INSERT_LEFT a)\nabbbababbbbaaaaba (after INSERT_MIDDLE b)\naabbbababbbbaaaaba (after INSERT_LEFT a)\naabbbabababbbaaaaba (after INSERT_MIDDLE a)\naabbbababbbbaaaaba (after DELETE_MIDDLE)\naabbbababbbaaaaba (after DELETE_MIDDLE)\n\nFor QUERY bbaaa, this string occurs once. It is shown in boldface type.\n\n\n\nAuthor:\n5\xe2\x98\x85wjmzbmr\n\n\nTester:\n6\xe2\x98\x85laycurse\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/STRQUERY\n\n\nTags:\n\n               \n                 Suffix Arrays, Treap, KMP Algorithm\n                 \n                     \n                     Advanced Data Structures, Suffix Structures, Advanced Algorithms, String Matching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2973\n\n\nDate Added:\n4-03-2013\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"