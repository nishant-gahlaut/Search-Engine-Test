b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nThe Ministry of Transportation has recently developed an electronic system for management of roads within states. The system allows opening and closing roads remotely. The Ministry has decided to test the system in two states (let's call them A and B); to simplify the configuration of the system for testing, these states were chosen in such a way that the following restriction holds: each state consists of NN cities (numbered 11 through NN) and MM bidirectional roads (numbered 11 through MM) connecting them.\nDuring the testing, the system was discovered to be faulty - it merged the two configurations into one and assumed that it is managing a single state with NN cities and MM roads. When the system was issued a command to open (or close) a road with number ii in one of the states, it would open (or close) both the road with number ii in state A and the road with number ii in state B.\nLet's call a state connected if it is possible to reach each of the NN cities in this state from all other cities using only open roads. If the system worked correctly, for each state, it would be enough to open N\xe2\x88\x921N\xe2\x88\x921 suitable roads in order to make it connected, while after the error, it became a much harder task to make both states connected at the same time.\nCurrently, all roads are closed. Please help the Ministry of Transportation determine the smallest number of commands to open a road that should be issued in the system in order to make both states A and B connected.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space-separated integers NN and MM.\nThe following MM lines describe the roads in the state A. Each of these lines contains two space-separated integers uu and vv denoting that cities uu and vv in the state A are connected by a road.\nThe last MM lines describe the roads in the state B in the same format.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the smallest number of roads that should be opened in order to make both states A and B connected.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41,0001\xe2\x89\xa4T\xe2\x89\xa41,000\n1\xe2\x89\xa4N,M\xe2\x89\xa43001\xe2\x89\xa4N,M\xe2\x89\xa4300\n1\xe2\x89\xa4u,v\xe2\x89\xa4N1\xe2\x89\xa4u,v\xe2\x89\xa4N\nu\xe2\x89\xa0vu\xe2\x89\xa0v\nthere are at most 55 test cases with M>50M>50\nthere is at most one road between each pair of cities in each state\n\nSubtasks\nSubtask #1 (10 points):\n\nN,M\xe2\x89\xa420N,M\xe2\x89\xa420\nthere are at most 55 test cases with M>10M>10\n\nSubtask #2 (50 points):\n\nT\xe2\x89\xa4100T\xe2\x89\xa4100\nN,M\xe2\x89\xa4100N,M\xe2\x89\xa4100\n\nSubtask #3 (40 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n5 7\n3 5\n1 2\n1 5\n2 3\n4 5\n1 4\n2 5\n2 5\n3 5\n1 4\n3 4\n2 3\n1 2\n4 5\n6 6\n4 6\n1 5\n1 3\n1 2\n2 4\n1 4\n1 3\n3 5\n1 5\n3 6\n2 5\n4 6\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n4\n6\n\n\nExplanation\nExample case 1: It is sufficient to open roads 11, 22, 33 and 66 to make both states connected. The open and closed roads are depicted in the following figure.\n\nExample case 2: The only way to make both states connected is to open all roads.\n\n\n\nAuthor:\nalexey_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CNNCT2\n\n\nTags:\n\n               \n                 alexey_adm, graphs, hard, matroid-intersection, oct19, r_64\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2885\n\n\nDate Added:\n25-09-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"