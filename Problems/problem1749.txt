b'\n\nYou are given three positive integers A, B and C written in base X <= 10 without leading zeros. In how many ways you can permute the digits of A and permute the digits of B such that their sum will be equal to C (in base X of course)? Leading zeros after permutation are allowed. So for example for A=101 written in some base all possible ways to permute its digits are: 011, 101, 110.\n\nRemark. For positive integer A and base X >= 2 the digits of A in base X are uniquely determined by the equality A = Ak * Xk + Ak-1 * Xk - 1 + ... + A1 * X + A0  and inequalities 0 <= A0, A1, ..., Ak < X and Ak > 0 . Then A is written as 0...0AkAk-1...A1A0 in base X. Here an arbitrary non-negative number of leading zeros is allowed. If there are no leading zeros we say that A is written in canonical form.\n\nInput\n The first line contains a single integer T, the number of test cases. T test cases follow. The only line of each test case contains four space separated positive integers X, A, B and C, where A, B, C is written in base X without leading zeros (that is in canonical form). \nOutput\n For each test case, output a single line containing the number of possible permutations of digits of A and B such that their sum is equal to C. \nConstraints\n\n1 <= T <= 10\n\n2 <= X <= 10\n\n1 <= len(A), len(B), len(C) <= 80/X\n\nwhere len(N) stands for  the number of digits of number N when it is written in base X in canonical form. \nExample\nInput:\n5\n2 10 10 11\n3 2 2 11\n10 101 12 23\n10 10 100 1000\n10 43716 70251864 71130699\n\nOutput:\n2\n1\n1\n0\n4\n\nExplanation\nIn the first case the appropriate ways are 01+10=11 and 10+01=11.\n\nIn the third case the only appropriate way is 011+12=23.\n            \n            \n            \n            \n            \n        \n\n        \n\n\nAuthor:\n2\xe2\x98\x85anton_adm\n\n\nTester:\n6\xe2\x98\x85pieguy\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/PERMDIG\n\n\nTags:\n\n               \n                 DP Bitmask, Bitmasking, Dynamic Programming\n                 \n                     \n                     Advanced Algorithms, Advanced DP, Mathematics, Bit Manipulation, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2451\n\n\nDate Added:\n12-10-2011\n\n\nTime Limit:\n0.591214 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'