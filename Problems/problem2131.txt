b'\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\n\xc2\xa0\nThis is an interactive problem.\nIt means that every time you output something, you must finish with a newline character and flush the output.\nFor example, in C++ use the fflush(stdout) function, in Java \xe2\x80\x94 call System.out.flush(), in Python \xe2\x80\x94 sys.stdout.flush(), and in Pascal \xe2\x80\x94 flush(output).\nOnly after flushing the output will you be able to read from the input again.\n\n\nAlice and Bob are taking a trip to Byteland.\nThe country can be modeled as an undirected graph with n cities and m bidirectional roads.\nThere are at most 1,000 cities, and between 0 and n * (n-1) / 2 roads.\nThe graph is not necessarily connected.\n\n\nAlice likes visiting cities that are directly connected.\nShe chose ka nodes that form a clique (i.e. every pair of cities has a direct road between them).\nBob on the other hand likes to visit cities that are not directly connected.\nHe chose kb nodes that form an independent set of the graph (i.e. no pair of cities has a direct road between them).\n\n\nAlice and Bob would like to know if their itineraries have any common cities.\nThis seemingly simple task is complicated by the fact that Alice and Bob have maps in different languages.\n\n\nAlice\xe2\x80\x99s map has the cities with names a1, a2, \xe2\x80\xa6, an.\nBob\xe2\x80\x99s map has cities with names b1, b2, \xe2\x80\xa6, bn.\nThese names are all distinct.\n\n\nLuckily for you, the judge knows how to translate strings between the languages.\nFormally, there is a hidden function f that the judge keeps such that for every i there exists a unique j such that f(ai) = bj, and ap, aq have a direct edge if and only if f(ap),f(aq) have a direct edge.\nWe will denote f-1(x) to denote the inverse of the function f.\nIntuitively, f translates strings from language A to language B, and f-1 translates them from language B to language A.\n\n\nTranslating words takes a lot of effort.\nYou would like to help Alice and Bob by translating as few as words as possible.\nYou can ask the judge what the value of f(ai) is, or what the value of f-1(bj) is.\nYou may only ask the judge at most 10 questions.\nAfter asking questions, you must be able to determine if Alice and Bob will visit any common cities.\nFormally, this means checking whether there exists a city ai that Alice visits and a city bj that Bob visits such that f(ai) = bj.\n\nInput\n\nThe first line will contain four integers, n, m, ka, kb.\nNext will follow a description of a map in Alice\'s language, then a description of a map in Bob\'s language.\n\n\nA map can be described as follows:\nThe first line contains n strings.\nThe first ka (resp kb) strings denote the cities that Alice (resp Bob) will visit.\nThe next m lines describe an undirected edge between two cities.\n\nInteraction\n\nTo ask a question, print \xe2\x80\x9cA s\xe2\x80\x9d to denote you would like to know what f(s) is (s must be one of a1, a2, \xe2\x80\xa6, an).\nPrint \xe2\x80\x9cB s\xe2\x80\x9d to denote you would like to know what f-1(s) is (s must be one of b1, b2, \xe2\x80\xa6, bn).\nDon\'t forget to flush the question after printing it.\nThe judge will respond to the question by printing a string denoting the answer to your question.\nYou may ask at most 10 questions.\n\n\nOnce you are finished asking questions, and are ready to answer the main question of whether or not Alice and Bob will visit any common cities, print \xe2\x80\x9cC s\xe2\x80\x9d, where s is either \xe2\x80\x9cYes\xe2\x80\x9d or \xe2\x80\x9cNo\xe2\x80\x9d (note, this is case sensitive).\n\nConstraints\n\n1 \xe2\x89\xa4 n \xe2\x89\xa4 1000\n0 \xe2\x89\xa4 m \xe2\x89\xa4 n * (n-1) / 2\n1 \xe2\x89\xa4 ka \xe2\x89\xa4 n\n1 \xe2\x89\xa4 kb \xe2\x89\xa4 n\n\n\xc2\xa0\nThe city names are all distinct and have between 1 and 10 characters, inclusive.\nAll city names consist of only lowercase letters.\nIt is guaranteed that the first ka cities in Alice\'s map are a clique, and the first kb cities in Bob\'s map are an independent set.\nIt is guaranteed that the maps described are isomorphic according to the hidden function f that the judge has.\n\nExample\n\n\nyour program     the system\n\n\n4 3 1 1\nab bc cd de\nab bc\nbc cd\ncd de\nw y x z\nx w\ny x\ny z\n\nA cd\n\nx\nA bc\n\ny\nB x\n\ncd\nA ab\n\nz\nB w\n\nde\nC No\n\n\nExplanation\nHere, we have 4 cities and 3 roads. Alice\'s map has cities with labels "ab", "bc", "cd", "de". Bob\'s map has cities with labels "w", "y", "x", "z". Alice visits cities {"ab"}. Bob visits cities {"w"}. Here, we show an example of the interaction. The translation function in this case is "ab" = "z", "bc" = "y", "cd" = "x", "de" = "w". In this case, we can see that Alice and Bob don\'t visit any cities in common, so the final answer is No. \n\n\n\nAuthor:\n7\xe2\x98\x85lg5293\n\n\nTester:\n7\xe2\x98\x85errichto\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MEETUP\n\n\nTags:\n\n               \n                 Graphs, Interactive Problems, Divide and Conquer\n                 \n                     \n                     Data Structures, Special, Algorithms, Recursion\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n13-03-2017\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'