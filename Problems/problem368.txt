b'\nNeural nets are extremely popular in the Machine Learning domain. A neural net is composed of multiple layers. It has an input layer in which you input the parameter x (the input of the program). The input is then passed through multiple hidden layers, finally getting one output at the final layer, called the output layer.\nWe have a very simple neural net, which consist of N hidden layers. Each layer contains one neuron. Each neuron has two values associated with it: wi, and bi, denoting the weight and the bias of the neuron. If you give the neuron an input of x, it produces an output of (wi * x) + bi. \nThus, an input x gets transformed by the neural net as follows. The first hidden neuron takes the input x and produces y = w1 * x + b1, which acts as the input for the second neuron. Then, the second neuron takes input y and produces an output of z = w2 * y + b2. This keeps happening and you get a single output at the end from the N-th neuron.\nThere are some users and we want to find if they are spamming or not. They have integer user-ids, which range from minX to maxX (both inclusive). So we take each of these user-ids and feed it as input to the first layer of the neural net. If the final output is even, then that user is not a spammer, otherwise, the user is a spammer. You have to count the number of non-spammers and spammers.\nInput\n\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains three space-separated integers N, minX, maxX.\nEach of the next N lines contains two space-separated integers wi and bi denoting the weight and the bias of the i-th neuron.\n\nOutput\nFor each test case, output two space-separated integers denoting the number of non-spammers and the number of spammers, respectively.\nConstraints\n\n1 \xe2\x89\xa4 T \xe2\x89\xa4 10\n1 \xe2\x89\xa4 N \xe2\x89\xa4 105\n1 \xe2\x89\xa4 minX \xe2\x89\xa4 maxX \xe2\x89\xa4 109\n1 \xe2\x89\xa4 wi, bi \xe2\x89\xa4 109\n\nExample\nInput\n3\n1 1 2\n1 2\n2 1 4\n2 4\n2 3\n3 2 1000000000\n2 4\n2 2\n5 4\n\nOutput\n1 1\n0 4\n999999999 0\n\nExplanation\nExample 1. There is a single neuron with weight = 1 and bias = 2. Let us check the output for x = 1: w * x + b = 1 * 1 + 2 = 3. Output for x = 2 would be 2 * 1 + 2 = 4. You can see that one of these is even and the other is odd. So, there is one spammer and one non-spammer.\nExample 2. There are two neurons with weights 2 each, but bias 4, 3 respectively.\n\n x = 1, y = 2 * 1 + 4 = 6. z = 2 * 6 + 3 = 15\n x = 2, y = 2 * 2 + 4 = 8. z = 2 * 8 + 3 = 19\n x = 3, y = 2 * 3 + 4 = 10. z = 2 * 10 + 3 = 23\n x = 4, y = 2 * 4 + 4 = 12. z = 2 * 12 + 3 = 27\n\n\nYou can see that all of these are odd and hence signify that they are spammers. So, there are 0 non-spammers and 4 spammers.\n\n\n\nAuthor:\nadmin2\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SPAMCLAS\n\n\nTags:\n\n               \n                 Case work, Conditional Statements, Basic Maths, ad-hoc, Implementation\n                 \n                     \n                     Special, Basic Programming Concepts, Mathematics, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n12-12-2017\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'