b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given two binary strings $A$ and $B$, each with length $N$. You may reorder the characters of $A$ in an arbitrary way and reorder the characters of $B$ also in an arbitrary (not necessarily the same) way. Then, you should compute the XOR of the resulting strings. Find the number of distinct values of this XOR which can be obtained, modulo $1,000,000,007$ ($10^9 + 7$).\nInput\n\nThe first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\nThe first line of each test case contains a single integer $N$.\nThe second line contains a single string $A$ with length $N$.\nThe third line contains a single string $B$ with length $N$.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the number of unique XORs modulo $1,000,000,007$.\nConstraints\n\n$1 \\le T \\le 10^5$\n$1 \\le N \\le 10^5$\n$|A| = |B| = N$\n$A$ and $B$ contain only characters \'0\' and \'1\'\nthe sum of $N$ over all test cases does not exceed $2 \\cdot 10^5$\n\nSubtasks\nSubtask #1 (10 points):\n\n$N \\le 5$\nthe sum of $N$ over all test cases does not exceed $10$\n\nSubtask #2 (30 points):\n\n$N \\le 1,000$\nthe sum of $N$ over all test cases does not exceed $2 \\cdot 10^3$\n\nSubtask #3 (60 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n1\n2\n00\n10\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n\n\nExplanation\nExample case 1: The characters in each string can be reordered in two ways (swap them or do nothing), so there are four values of their XOR:\n\n"00" XOR "10" is "10"\n"00" XOR "01" is "01"\n"00" XOR "10" is "10"\n"00" XOR "01" is "01"\n\nThere are only two distinct values.\n\n\n\nAuthor:\n5\xe2\x98\x85black_truce\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BINXOR\n\n\nTags:\n\n               \n                 Modulo Multiplicative Inverse, Bitwise Operation\n                 \n                     \n                     Mathematics, Modular Arithmetic, Bit Manipulation\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1932\n\n\nDate Added:\n1-09-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'