b'\n          \n            Given an array A of N integers A[0], A[1], ..., A[N-1] and a string B which is a permutation of "12345".\nYou have to find a subsequence of 5 elements from A having distinct values such that their relative order is same as B.\n\nMeaning that, if (i0, i1, i2, i3, i4) are the indexes of such a subsequence\n (0 <= i0 < i1 < i2 < i3 < i4 < N) then:\n\n\nA[i0] is the B[0]-th smallest element among the 5 numbers.\n\nA[i1] is the B[1]-th smallest element among the 5 numbers.\n\nA[i2] is the B[2]-th smallest element among the 5 numbers.\n\nA[i3] is the B[3]-th smallest element among the 5 numbers.\n\nA[i4] is the B[4]-th smallest element among the 5 numbers.\n\n\nInput\nThe first line of input contains T(<=60) which is the number of tests cases.  The first line of each test case will be an integer N (5<=N<=1000) and a string B containing a permutation of "12345". Next line will contain N integers A[0], A[1], ..., A[N-1].  Each of them will be between -109 and +109 (inclusive). \nOutput\nFor each test case output five space separated integers in ascending order which are the indexes (i0, i1, i2, i3, i4) of a five length subsequence described before. You may output any solution. If there is no solution just output "-1" without quotes. \nExample\nInput:\n2\n7 32145\n6 17 5 3 13 8 10\n7 12345\n10 20 30 40 40 20 10\n\nOutput:\n0 2 3 5 6\n-1\n\n\nExplanation of 1st sample: {0, 2, 3, 5, 6} is a valid solution because the values of those indexes {6, 5, 3, 8, 10} will have ranks {3, 2, 1, 4, 5} after sorting. But {0, 2, 3, 4, 5} is not a solution as the values {6, 5, 3, 13, 8} will have ranks {3, 2, 1, 5, 4} after sorting.\n\nExplanation of 2nd sample: There is no five length subsequence in the array that will have ranks {1, 2, 3, 4, 5}  after sorting.\n\n            \n            \n            \n            \n            \n        \n\n        \n\n\nAuthor:\nimran_adm\n\n\nTester:\n6\xe2\x98\x85anton_lunyov\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/FINDSEQ\n\n\nTags:\n\n               \n                 Pre processing, DP Approach, Observation\n                 \n                     \n                     Advanced Algorithms, Algorithms, Dynamic Programming\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2594\n\n\nDate Added:\n7-12-2011\n\n\nTime Limit:\n1.32192 - 2.05633 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'