b'\nSuppose we have a 2D grid AA of infinite width and height of NN units. Each row of the grid can be represented in the form of 111\xe2\x80\xa6100\xe2\x80\xa6\xe2\x88\x9e111\xe2\x80\xa6100\xe2\x80\xa6\xe2\x88\x9e where the 11s are repeated xx times, x>0x>0. Implying that the row starts with xx consecutive 11-s followed by all 00-s. \nInitially all cells are unmarked. Cell (i,j) refers to the i-th row, and j-th column. (1,1) refers to the bottom-left cell.\nNow you do the following in each step.\nChoose an unmarked cell having 1. Let it be (i, j).\nwhile((i,j) lies in the grid boundaries && A[i][j] == 1){\n    mark[i][j] = true; i--; j--;\n}\n\nHow many minimum number of steps are required to mark all the cells containing 11?\nNote: The number of consecutive 11-s at each height is given by the array WW where WiWi represents the same at ithith row.\nInput:\n\nFirst line will contain TT, number of testcases. Then the testcases follow. \nEach testcase contain 22 lines of input.\nFirst line will contain NN, height of the grid (number of rows). \nSecond line contains NN space separated integers where ithith index represents number of consecutive 11-s at the beginning of row ii.\n\nOutput:\nFor each testcase, output in a single line answer to the problem.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4101\xe2\x89\xa4T\xe2\x89\xa410\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Wi\xe2\x89\xa41091\xe2\x89\xa4Wi\xe2\x89\xa4109\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n3\n1 1 1\n3\n5 3 2\n3\n4 2 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n3\n7\n8\n\n\nExplanation\nTestCase 1: All the points need to be considered to cover all 11-s.\nTestCase 2: The optimal set of starting points is {(1,3),(2,3),(2,2),(3,2),(3,1),(4,1),(5,1)}{(1,3),(2,3),(2,2),(3,2),(3,1),(4,1),(5,1)}.\n\n\n\n\nAuthor:\ndaanish_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/PGRID1\n\n\nTags:\n\n               \n                 Observation\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2204\n\n\nDate Added:\n29-12-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'