b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given a string SS with length NN that contains only the 2626 lowercase English letters. You are also given a sequence W1,W2,\xe2\x80\xa6,W26W1,W2,\xe2\x80\xa6,W26 of weights corresponding to these letters in the order from \'a\' to \'z\', i.e. W1W1 is the weight of \'a\', W2W2 is the weight of \'b\' and so on.\nWe define the weight of a string as the sum of weights of all characters present in it. If a character occurs multiple times in this string, its weight is also counted multiple times.\nNext, we define the power of a string ss as the sum of weights of all strings rr such that ss can be represented as r+r+\xe2\x80\xa6+r+pr+r+\xe2\x80\xa6+r+p, where ++ denotes string concatenation and pp is a prefix of rr (possibly empty).\nConsider a contiguous substring of SS chosen uniformly randomly among all its N(N+1)/2N(N+1)/2 contiguous substrings. Find the expected value of the power of such a substring. The expected power can be represented as a fraction P/QP/Q, where PP and QQ are positive integers and QQ is coprime with 998,244,353998,244,353. You should calculate P\xe2\x8b\x85Q\xe2\x88\x921P\xe2\x8b\x85Q\xe2\x88\x921 modulo 998,244,353998,244,353, where Q\xe2\x88\x921Q\xe2\x88\x921 denotes the multiplicative inverse of QQ modulo 998,244,353998,244,353.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single string SS.\nThe second line contains 2626 space-separated integers W1,W2,\xe2\x80\xa6,W26W1,W2,\xe2\x80\xa6,W26.\n\nOutput\nFor each test case, print a single line containing one integer P\xe2\x8b\x85Q\xe2\x88\x921P\xe2\x8b\x85Q\xe2\x88\x921 modulo 998,244,353998,244,353.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa4500,0001\xe2\x89\xa4N\xe2\x89\xa4500,000\n1\xe2\x89\xa4Wi\xe2\x89\xa41091\xe2\x89\xa4Wi\xe2\x89\xa4109 for each valid ii\nSS contains only lowercase English letters\nthe sum of |S||S| over all test cases does not exceed 500,000500,000\n\nSubtasks\nSubtask #1 (10 points):\n\nN\xe2\x89\xa4100N\xe2\x89\xa4100\nthe sum of |S||S| over all test cases does not exceed 1,0001,000\n\nSubtask #2 (20 points):\n\nN\xe2\x89\xa42,000N\xe2\x89\xa42,000\nthe sum of |S||S| over all test cases does not exceed 20,00020,000\n\nSubtask #3 (70 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\naaa\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\nabab\n1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n499122179\n698771051\n\n\nExplanation\nLet W(s)W(s) and P(s)P(s) denote the weight and power of a string ss respectively.\nExample case 1: There are 33 contiguous substrings "a", 22 contiguous substrings "aa" and 11 contiguous substring "aaa".\n\n"a" is chosen with probability 3/63/6; we have P(a)=W(a)=1P(a)=W(a)=1\n"aa" is chosen with probability 2/62/6; P(aa)=W(a)+W(aa)=1+2=3P(aa)=W(a)+W(aa)=1+2=3\n"aaa" is chosen with probability 1/61/6; P(aaa)=W(a)+W(aa)+W(aaa)=1+2+3=6P(aaa)=W(a)+W(aa)+W(aaa)=1+2+3=6\n\nThe expected power is (3\xe2\x8b\x851+2\xe2\x8b\x853+1\xe2\x8b\x856)/6=15/6(3\xe2\x8b\x851+2\xe2\x8b\x853+1\xe2\x8b\x856)/6=15/6.\nExample case 2: The contiguous substrings are "a", "b", "ab", "ba", "aba", "bab", "abab"; the first three of them occur twice. We have P(a)=W(a)=1P(a)=W(a)=1, P(b)=W(b)=2P(b)=W(b)=2, P(ab)=W(ab)=1+2=3P(ab)=W(ab)=1+2=3, P(ba)=W(ba)=3P(ba)=W(ba)=3, P(aba)=W(ab)+W(aba)=3+4=7P(aba)=W(ab)+W(aba)=3+4=7, P(bab)=W(ba)+W(bab)=3+5=8P(bab)=W(ba)+W(bab)=3+5=8 and P(abab)=W(ab)+W(abab)=3+6=9P(abab)=W(ab)+W(abab)=3+6=9.\nThe expected power is (2\xe2\x8b\x85P(a)+2\xe2\x8b\x85P(b)+2\xe2\x8b\x85P(ab)+P(ba)+P(aba)+P(bab)+P(abab))/10=39/10(2\xe2\x8b\x85P(a)+2\xe2\x8b\x85P(b)+2\xe2\x8b\x85P(ab)+P(ba)+P(aba)+P(bab)+P(abab))/10=39/10.\n\n\n\nAuthor:\n6\xe2\x98\x85aviroop123\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/EXPREP\n\n\nTags:\n\n               \n                 Suffix Automaton, Suffix Arrays, Fenwick Trees, DSU on Trees\n                 \n                     \n                     Advanced Data Structures, Suffix Structures, Advanced Tree Structures, Advanced Algorithms, Advanced Graph Algos\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3155\n\n\nDate Added:\n2-06-2020\n\n\nTime Limit:\n3.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'