b'\nDazzler has a blank canvas and (N\xe2\x88\x921)(N\xe2\x88\x921) colours numbered from 22 to NN.\nLet BB denote the beauty of the canvas. The beauty of a blank canvas is 11.\nDazzler paints the canvas by using all the (N\xe2\x88\x921)(N\xe2\x88\x921) colours exactly once. On applying the ithith colour (2\xe2\x89\xa4i\xe2\x89\xa4N)(2\xe2\x89\xa4i\xe2\x89\xa4N):\n\nIf ii is odd, B=BB=B && ii.\nIf ii is even, B=B\xe2\x8a\x95iB=B\xe2\x8a\x95i. \n\nFind the beauty of the canvas after applying all (N\xe2\x88\x921)(N\xe2\x88\x921) colours.\nNote: The colours are applied in ascending order. Colour number 22 is applied first. The ithith numbered colour is applied after (i\xe2\x88\x921)th(i\xe2\x88\x921)th numbered colour for all i>2i>2.\nHere && and \xe2\x8a\x95\xe2\x8a\x95 denote the bitwise AND and bitwise XOR operations respectively.\nInput Format\n\nFirst line will contain TT, the number of test cases. Then the test cases follow.\nEach test case contains of a single line of input, a single integer NN.\n\nOutput Format\nFor each test case, output a single integer, the beauty of the canvas after applying all (N\xe2\x88\x921)(N\xe2\x88\x921) colours.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n2\xe2\x89\xa4N\xe2\x89\xa410162\xe2\x89\xa4N\xe2\x89\xa41016\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n4\n10\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n3\n\n\nExplanation\nInitially, B=1B=1.\n\nOn applying colour 22: Since 22 is even, B=B\xe2\x8a\x952=1\xe2\x8a\x952=3B=B\xe2\x8a\x952=1\xe2\x8a\x952=3.\nOn applying colour 33: Since 33 is odd, B=B&3=3&3=3B=B&3=3&3=3.\nOn applying colour 44: Since 44 is even, B=B\xe2\x8a\x954=3\xe2\x8a\x954=7B=B\xe2\x8a\x954=3\xe2\x8a\x954=7.\nOn applying colour 55: Since 55 is odd, B=B&5=7&5=5B=B&5=7&5=5.\nOn applying colour 66: Since 66 is even, B=B\xe2\x8a\x956=5\xe2\x8a\x956=3B=B\xe2\x8a\x956=5\xe2\x8a\x956=3.\nOn applying colour 77: Since 77 is odd, B=B&7=3&7=3B=B&7=3&7=3.\nOn applying colour 88: Since 88 is even, B=B\xe2\x8a\x958=3\xe2\x8a\x958=11B=B\xe2\x8a\x958=3\xe2\x8a\x958=11.\nOn applying colour 99: Since 99 is odd, B=B&9=11&9=9B=B&9=11&9=9.\nOn applying colour 1010: Since 1010 is even, B=B\xe2\x8a\x9510=9\xe2\x8a\x9510=3B=B\xe2\x8a\x9510=9\xe2\x8a\x9510=3.\n\nTest case 11: There are 33 colours numbered 2,3,2,3, and 44. Initially, B=1B=1.\nThe final beauty of the canvas is 77.\nTest case 22: There are 99 colours numbered 2,3,4,5,6,7,8,9,2,3,4,5,6,7,8,9, and 1010. Initially, B=1B=1.\nThe final beauty of the canvas is 33.\n\n\n\nAuthor:\n5\xe2\x98\x85dazlersan1\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/AXNODR\n\n\nTags:\n\n               \n                 april221, bit-manipulation, dazlersan1, easy, finding-pattern\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1246\n\n\nDate Added:\n4-04-2022\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'