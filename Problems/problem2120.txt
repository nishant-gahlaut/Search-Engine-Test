b'\n\n\nIt\'s a very funny thought that, if Bears were Bees,\nThey\'d build their nests at the bottom of trees.\nAnd that being so (if the Bees were Bears),\nWe shouldn\'t have to climb up all these stairs.\n\nWinnie-the-Pooh, a Complaining Song\n\n\nHave you ever thought, when given an undirected graph in some problem, that it would be easier to solve it if the graph\'s edges were actually its vertices and the graph\'s vertices were its edges? This problem is right about this -- unfortunately, not about bears and bees (but if you want, you may think of vertices as of bears and of edges as of bees (or even vice versa)).\n\nSuppose you\'re given an undirected graph G0 with N vertices and M edges. Let\'s perform a simple transformation on graph G0 to obtain graph G1 with M vertices so that each vertex of G1 corresponds to a unique edge of G0 and a pair of vertices in G1 is connected by a single edge if and only if the corresponding edges of G0 share a common vertex. Similarly, let\'s perform a simple transformation on graph G1 to obtain graph G2, and let\'s perform a simple transformation on graph G2 to obtain graph G3.\n\nAll you have to do is to output the number of vertices and edges in G3.\n\nInput\nThe first line of the input file contains one integer T -- the number of test cases (no more than 10). Each test case is described by a line containing two integers N and M (1 \xe2\x89\xa4 N, M \xe2\x89\xa4 1000) followed by M lines, each containing two integers between 1 and N, inclusive, separated by a single space and describing an edge of graph G0. It\'s guaranteed that each edge connects two distinct vertices and each pair of vertices is directly connected by at most one edge.\n\nOutput\nFor each test case output just one line containing two integers -- the number of vertices and edges in G3.\n\nExample\nInput:\n2\n3 3\n1 2\n1 3\n2 3\n4 4\n1 2\n1 3\n2 3\n3 4\n\nOutput:\n3 3\n8 18\n\nExplanation:\n\nIn the first test case the given graph is a "triangle". It\'s easy to see that a simple transformation on a triangle results in the same triangle (as it contains three pairwise connected vertices and three pairwise "connected" edges).\n\n\n\nAuthor:\ngennady_adm\n\n\nTester:\n4\xe2\x98\x85chmel_tolstiy\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BEARS\n\n\nTags:\n\n               \n                 ad-hoc, Observation\n                 \n                     \n                     Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2415\n\n\nDate Added:\n17-01-2012\n\n\nTime Limit:\n0.203222 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'