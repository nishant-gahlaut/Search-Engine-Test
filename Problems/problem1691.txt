b"\nRead problems statements in Mandarin Chinese, Russian, Vietnamese and Bengali as well.\nYou are given a tree with NN nodes (numbered 11 through NN). \nThe distance d(p,q) between two nodes p and q of the tree is the number of edges on the unique path between them.\nThere will be Q events each of which can be of the following three types:\n\n'1 u': A certain node u becomes a special node. It is guaranteed that u was not special before this event.\n'2 u': A certain node u becomes no longer special. It is guaranteed that u was special before this event.\n'3 K': You are given a non-negative integer K. For a node x, define f(x)=max{d(x,y):y\xc2\xa0is special}. You must answer if there exists a node x such that f(x)=K. In other words, you are asked whether there exists a node x whose distance to the farthest special node is K. Note that x doesn't have to be special. It is guaranteed that there is at least one special node in the tree at the time of this event.\n\nIn the beginning, there are no special nodes.\nInput Format\n\nThe first line of the input contains a single integer T - the number of test cases. The description of T test cases follow.\nThe first line of each test case contains a single integer N.\nN\xe2\x88\x921 lines follow. The i-th of these lines contains two integers ui and vi denoting an edge of the tree.\nThe next line contains a single integer Q - the number of events.\nQ lines follow. The i-th of these lines contains two integers ti (the type of the i-th query) and qi. If ti=1 or ti=2, qi is the vertex whose status is being changed. If ti=3, qi is the parameter describing a query of the third type.\n\nOutput Format\n\nFor each test case, print a single line.\nIn that line, print l characters with no spaces between them, where l is the number of queries of third type in this test case. \nFor each valid i, the i-th character in the line should be 1 if there exists a node satisfying the conditions of the i-th query of third type in that test case and 0 otherwise.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa4200\n1\xe2\x89\xa4N,Q\xe2\x89\xa42\xe2\x8b\x85105\n1\xe2\x89\xa4ui,vi\xe2\x89\xa4N\n1\xe2\x89\xa4ti\xe2\x89\xa43\n1\xe2\x89\xa4qi\xe2\x89\xa4N for each i such that ti=1 or ti=2\n0\xe2\x89\xa4qi\xe2\x89\xa4N\xe2\x88\x921 for each i such that ti=3 \nThe graph described on the input is a tree\nIn each test case, there is at least one query of type 3\nThe sum of N over all test cases does not exceed 4\xe2\x8b\x85105\nThe sum of Q over all test cases does not exceed 4\xe2\x8b\x85105\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n5\n1 2\n1 3\n2 4\n2 5\n7\n1 2\n3 2\n3 3\n1 4\n3 3\n2 2\n3 1\n8\n1 2\n2 3\n2 4\n2 5\n4 6\n5 7\n5 8\n9\n1 1\n1 7\n1 8\n3 2\n3 1\n3 4\n2 1\n3 1\n3 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1011\n10110\n\n\nExplanation\nTest case 1: The following picture shows the tree in the first test case:\n\n\n\n\nIn the first query of the third type we have K=2 and the node 2 is the only special node. The special node with the maximum distance from node 3 is the node 2 and d(3,2)=2=K, so the node 3 satisfies the requirement. Therefore, the answer to this query is 1.\nIn the second query of the third type we have K=3 and the node 2 is the only special node. There do not exist any nodes at distance K=3 from the node 2. Therefore, the answer to this query is 0.\nIn the third query of the third type we have K=3 and the special nodes are 2 and 4. The special node with the maximum distance from node 3 is the node 4 and d(3,4)=3=K, so the node 3 satisfies the requirement. Therefore, the answer to this query is 1.\nIn the fourth query of the third type we have K=1 and the node 4 is the only special node. The special node with the maximum distance from node 2 is the node 4 and d(2,4)=1=K, so the node 2 satisfies the requirement. Therefore, the answer to this query is 1.\n\nTest case 2: The following picture shows the tree in the second test case:\n\n\n\n\nIn the first query of the third type we have K=2 and the special nodes are 1, 7 and 8. The special node with the maximum distance from node 2 is the node 7 and d(2,7)=2=K, so the node 2 satisfies the requirement. Therefore, the answer to this query is 1.\nIn the second query of the third type we have K=1 and the special nodes are 1, 7 and 8. There do not exist any nodes at distance K=1 from their farthest special node. Therefore, the answer to this query is 0.\nIn the third query of the third type we have K=4 and the special nodes are 1, 7 and 8. The special node with the maximum distance from node 6 is the node 7 and d(6,7)=4=K, so the node 6 satisfies the requirement. Therefore, the answer to this query is 1.\nIn the fourth query of the third type we have K=1 and the special nodes are 7 and 8. The special node with the maximum distance from node 5 is the node 7 and d(5,7)=1=K, so the node 5 satisfies the requirement. Therefore, the answer to this query is 1.\nIn the fifth query of the third type we have K=5 and the special nodes are 7 and 8. There do not exist any nodes at distance K=5 from their farthest special node. Therefore, the answer to this query is 0.\n\n\n\n\nAuthor:\n5\xe2\x98\x85losmi247\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SPTREE2\n\n\nTags:\n\n               \n                 Trees, Segment Trees, Lowest Common Ancestor, DFS Order, Diameter\n                 \n                     \n                     Data Structures, Graphs, Advanced Data Structures, Advanced Tree Structures, Algorithms, Graph Algos, Traversals, Graph Measurements, DFS\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3283\n\n\nDate Added:\n24-07-2021\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"