b"\nRead problems statements in Hindi,\nMandarin chinese\n, Russian and Vietnamese as well.\nIt's summer \xe2\x80\x94 the time for holidays! Chef finally finished all university exams. Now he can rest and play with sequences.\nToday, Chef took a sequence AA with NN elements. He wants to partition this sequence into an arbitrary number of non-empty contiguous subsequences (i.e. each of the subsequences has to consist of one or more consecutive elements of the original sequence). Each element of the original sequence must belong to exactly one subsequence.\nThis would be easy for Chef, so he is only interested in safe partitions of AA. A safe partition is a partition into subsequences S1,S2,\xe2\x80\xa6,SKS1,S2,\xe2\x80\xa6,SK such that for each valid ii, min(Si)\xe2\x89\xa4|Si|\xe2\x89\xa4max(Si)min(Si)\xe2\x89\xa4|Si|\xe2\x89\xa4max(Si) \xe2\x80\x94 that is, for each subsequence in this partition, its length is greater or equal to its smallest element and smaller or equal to its largest element.\nFinding one safe partition would still be easy for Chef, so he wants to find the number of safe partitions of AA. Since this number could be very big, please compute it modulo 10000000071000000007 (109+7109+7).\nInput\n\nThe first line of the input contains a single integer NN.\nThe second line contains NN space-separated integers A1,A2,\xe2\x80\xa6,ANA1,A2,\xe2\x80\xa6,AN.\n\nOutput\nPrint a single line containing one integer \xe2\x80\x94 the number of safe partitions of AA modulo 109+7109+7.\nConstraints\n\n1\xe2\x89\xa4N\xe2\x89\xa45\xe2\x8b\x851051\xe2\x89\xa4N\xe2\x89\xa45\xe2\x8b\x85105\n1\xe2\x89\xa4Ai\xe2\x89\xa4N1\xe2\x89\xa4Ai\xe2\x89\xa4N for each valid ii\n\nSubtasks\nSubtask #1 (10 points): 1\xe2\x89\xa4N\xe2\x89\xa41,0001\xe2\x89\xa4N\xe2\x89\xa41,000\nSubtask #2 (10 points):\n\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\n1\xe2\x89\xa4Ai\xe2\x89\xa45001\xe2\x89\xa4Ai\xe2\x89\xa4500 for each valid ii\n\nSubtask #3 (15 points): there are exactly two different values of elements of AA\nSubtask #4 (25 points): A2i=NA2i=N for each valid ii\nSubtask #5 (40 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n7\n1 6 2 3 4 3 4\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n6\n\n\nExplanation\nThe six safe partitions are:\n\n[1],[6,2,3,4,3,4][1],[6,2,3,4,3,4]\n[1,6,2],[3,4,3,4][1,6,2],[3,4,3,4]\n[1,6,2,3],[4,3,4][1,6,2,3],[4,3,4]\n[1],[6,2],[3,4,3,4][1],[6,2],[3,4,3,4]\n[1],[6,2,3],[4,3,4][1],[6,2,3],[4,3,4]\n[1,6],[2,3],[4,3,4][1,6],[2,3],[4,3,4]\n\n\n\n\nAuthor:\n6\xe2\x98\x85allllekssssa\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SAFPAR\n\n\nTags:\n\n               \n                 DP Approach, Observation, Prefix Sum\n                 \n                     \n                     Algorithms, Dynamic Programming, Simple Algos\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2708\n\n\nDate Added:\n22-07-2018\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"