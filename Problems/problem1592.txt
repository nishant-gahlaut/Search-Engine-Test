b"\nRead problems statements Hindi , Vietnamese , Mandarin Chinese , Russian and Bengali as well.\nChef is making NN atomic soups numbered 1 through N. Each soup is either a base atomic soup or a composition of other atomic soups. For each valid i, if soup i is not a base soup, one unit of this soup is made by mixing together one unit of soup ci,1, one unit of soup ci,2, and so on to one unit of soup ci,Pi. Note that these Pi soup units are not necessarily from distinct soups and that we obtain only 1 unit of soup by mixing Pi units.\nDue to their structure, two units of the same base atomic soup always cancel out and vanish when mixed together. Therefore, we define the base decomposition of a soup as the set of all base atomic soups that need to be used an odd number of times when making the resulting soup (i.e. a base soup b belongs to the base decomposition if we need to use an odd number of units of soup b in total). The base decomposition of a sequence of atomic soups is the base decomposition of the soup created by mixing together one unit of each of these soups.\nYou should answer Q queries. In each query, you are given a sequence of Chef's soups s1,s2,\xe2\x80\xa6,sK; you must decide whether it is possible to choose two disjoint subsequences (one of which may be empty) of this sequence which have the same base decomposition. Two subsequences are disjoint if there is no index i such that each subsequence contains soup si.\nInput\n\nThe first line of the input contains a single integer N.\nN lines follow. For each i (1\xe2\x89\xa4i\xe2\x89\xa4N), the i-th of these lines contains an integer Pi; if Pi\xe2\x89\xa00, it is followed by a space and Pi space-separated integers ci,1,ci,2,\xe2\x80\xa6,ci,Pi.\nThe next line contains a single integer Q.\nThe following Q lines describe queries. Each of these lines contains an integer K followed by a space and K space-separated integers s1,s2,\xe2\x80\xa6,sK.\n\nOutput\nPrint a single line containing a string with length Q. For each valid i, the i-th character of this string should be '1' if it is possible to choose required subsequences in the i-th query or '0' otherwise.\nConstraints\n\n1\xe2\x89\xa4N,Q\xe2\x89\xa42\xe2\x8b\x85104\n1\xe2\x89\xa4K\xe2\x89\xa430\n1\xe2\x89\xa4ci,j<i for each valid i,j\n1\xe2\x89\xa4si\xe2\x89\xa4N for each valid i\nP1+P2+\xe2\x80\xa6+PN\xe2\x89\xa45\xe2\x8b\x85105\n\nSubtasks\nSubtask #1 (13 points):\n\n1\xe2\x89\xa4N\xe2\x89\xa4100\n1\xe2\x89\xa4K\xe2\x89\xa46\n\nSubtask #2 (22 points): 1\xe2\x89\xa4N\xe2\x89\xa4500\nSubtask #3 (65 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n8\n0\n0\n2 1 2\n0\n3 1 2 4\n3 2 2 3\n2 2 4\n2 1 4\n5\n3 3 4 5\n4 2 4 1 5\n3 1 2 4\n4 2 4 3 1\n4 6 7 8 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n11011\n\n\nExplanation\nSoups 1, 2 and 4 are base atomic soups. The base decompositions of the other soups are:\n\nsoup 3: {1,2}\nsoup 5: {1,2,4}\nsoup 6: {1,2} (two units of soup 2 cancel out)\nsoup 7: {2,4}\nsoup 8: {1,4}\n\nFor the first query, we can choose subsequences [3,4] and [5]. The base decomposition of subsequence {3,4} is {1,2,4}, which is the same as the base decomposition of soup 5.\nFor the last query, we can choose subsequences [6,8] and [7]. The base decomposition of each subsequence is {2,4}, because two units of soup 1 cancel out. You may notice that the chosen subsequences do not form a partition of all K given soups, since soup 5 was not used at all.\n\n\n\nAuthor:\n7\xe2\x98\x85bciobanu\n\n\nTags:\n\n               \n                 Randomized Algorithms, Linear Algebra, Gaussian Elimination\n                 \n                     \n                     Advanced Algorithms, Mathematics, Algebra, Matrices\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2719\n\n\nDate Added:\n26-07-2018\n\n\nTime Limit:\n0.5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"