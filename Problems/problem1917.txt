b'\n Read problems statements in Mandarin Chinese  and Russian.\n[a simple graph is an undirected graph that has no loops (edges connected at both ends to the same vertex) and no more than one edge between any two different vertices.]\n -Retrieved from http://en.wikipedia.org/wiki/Graph_(mathematics)\nThe road system at Byteland can be seen as a simple graph in which the vertices represented by the cities and the edges represented by the roads connected two different cities. Besides, the road system is connected it means people can travel between any two cities. It is decided by the president that two roads will be concurrently upgraded in the next month. Since it may take a couple of weeks to get the work done, two roads should be chosen so that the connectivity of the system is hold during the up-gradation process. More clearly, people still can go between any pair of cities without using that two roads.\n\nWhich roads should be upgraded is not decided yet. There may be no way to choose such a two roads or may be many ways. Your mission is counting how many pair of roads cannot be chosen. Notice that two roads must be different and we consider only un-ordered pair ((1, 2) is the same as (2,1)).\nInput\nThe first line of the input contains two integers N M which are the number of cities and roads respectively. Each line in the next  M  contains two integers u v which means there is a road connects the uth city to the vth city.\nOutput\n Output a single line contains the number of way that two roads cannot be chosen for upgradation.\nConstraints\n\n1 \xe2\x89\xa4 N \xe2\x89\xa4 100,000\n1 \xe2\x89\xa4 M \xe2\x89\xa4 300,000\n1 \xe2\x89\xa4 u, v \xe2\x89\xa4 N\nu \xe2\x89\xa0 v\nThere is at most one road between any two cities.\n\nExample\nInput:\n5 6\n1 2\n2 3\n1 3\n3 4\n4 5\n3 5\n\nOutput:\n6\n\nExplanation\nThere are 5 cities and 6 roads (numbered from 1 to 6). There are 6 pairs of roads cannot be chosen which are \n(1, 2), (1, 3), (2, 3), (4, 5), (4, 6) and (5, 6).\n\n\n\nAuthor:\ntuan_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TAPAIR\n\n\nTags:\n\n               \n                 Pre processing, Bit Manipulation, DFS Order\n                 \n                     \n                     Advanced Algorithms, Mathematics, Algorithms, Graph Algos, Traversals, DFS\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2699\n\n\nDate Added:\n15-05-2013\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'