b"\nRead problem statements in Mandarin, Bengali, Russian, and Vietnamese as well.\nThere is an $N \\times N$ matrix. Let $(i, j)$ denote the cell in the $i$-th row and the $j$-th column, where the rows are numbered $0, 1, \\ldots, N - 1$ from top to bottom and the columns are numbered $0, 1, \\ldots N-1$ from left to right. There is a hidden cell $(a, b)$. It  is known that this cell doesn't lie on the boundary of the matrix. That is, $\\min(a, b) \\geq 1$ and $\\max(a, b) < N - 1$.\nYour task is to recover the hidden cell. You can ask queries, in which you give the judge a matrix $M$ of size $N \\times N$, consisting of zeroes and ones. Let's call a cell $(i, j)$ valid if $(i, j) = (a, b)$ or $M_{i,j} = 1$. The judge replies whether there exists a path from $(0, 0)$ to $(N - 1, N - 1)$ consisting of only valid cells, moving only down and right.\nFormally, it tells whether there exits a sequence of $2N - 1$ cells $(0 = u_0, 0 = v_0), (u_1, v_1), \\ldots, (N - 1 = u_{2N-2}, N - 1 = v_{2N-2})$, such that $(u_i, v_i)$ is a valid cell for all $i$ and either $(u_{i + 1} = u_i, v_{i + 1} = v_i + 1)$ or $(u_{i + 1} = u_i + 1, v_{i + 1} = v_i)$.\nThe score of your submission is a function of the number of queries asked. Please refer to the scoring section for more details.\nNote that the grader is not adaptive, which means that the hidden cell is fixed in the beginning and won't change according to the queries you ask.\nInput\n\nFirst, you should read a single integer $T$, the number of test cases.\nFor each test case, first read the value of $N$.\nTo make a query, you should first print ? on a new line. Then you should print $N$ lines each containing a string of $N$ characters denoting the matrix $M$.\nIf the query format is incorrect (i.e. if the matrix doesn't have dimensions $N \\times N$ or if some character in the matrix is not $0$ or $1$), or if you have asked more than $120$ queries, the judge prints -1, and exits with a wrong answer verdict. In this case, you must also terminate your program.\nOnce you know the hidden cell, print a character ! on a new line. In the next line, print two space-separated integers $a$ and $b$, the row and column numbers of the hidden cell respectively.\nIf your answer is incorrect, the judge prints -1 and exits  with a Wrong Answer verdict. In this case, you must terminate your program as well. Otherwise, the judge prints 1, and you should move to the next test case (if any).\n\nNote that whenever the judge prints \xe2\x88\x921, you should immediately terminate your program to receive a Wrong Answer verdict; otherwise, you may receive any verdict. Don't forget to flush the output after printing each line!\nTest Data and Scoring\nEach test file has exactly $50$ test cases all with $N = 50$.\nLet $Q$ be the maximum number of queries asked by you over all the test cases of all the test files.\n\nIf $Q > 120$, you get $0$ points.\nIf $61 \\le Q \\le 120$, you get $9$ points.\nIf $51 \\le Q \\le 60$, you get $24$ points.\nIf $Q \\le 50$, you get $54 + \\left \\lfloor \\dfrac{46 \\times (50 - \\max(Q, 14))}{36} \\right \\rfloor$ points, where $\\lfloor x \\rfloor$ denotes the largest integer $\\le x$.  In particular, you get $54$ points if $Q = 50$ and $100$ points if $Q \\le 14$. \n\nInteraction Example\nYou                     Grader\n                        3           # 3 test cases\n                        4           # N = 4\n?\n1100\n0100\n0001\n1111\n                        1           # The judge tells that there is\n                                    # a valid path.\n!\n2 1\n\n                        1           # Correct answer! \n\n                        4           # Next test case, N = 4\n\n?\n1000\n0000\n0010\n0001\n                        0           # There doesn't exist a path\n!\n2 2\n                        -1          # Incorrect output! Judge exits\nYou should also\nterminate here\nwithout reading\nthe next test case\n\nExplanation\nPlease note that a small value of $T, N$ is used for explanation purposes. In all the actual tests, $T = 50, N = 50$.\nIn the first example, $(2, 1)$ is the hidden cell. You ask the query:\n1100\n0100\n0001\n1111\n\nThe path $(0, 0) \\to (0, 1) \\to (1, 1) \\to (2, 1) \\to (3, 1) \\to (3, 2) \\to (3, 3)$ consists of only valid cells and the judge replies with $1$.\nIn the second test case, the hidden cell is $(1, 1)$. When you ask the query\n1000\n0000\n0010\n0001\n\nOnly all the diagonal cells are valid. There is no path from $(0, 0)$ to $(3, 3)$ passing only through valid cells, so the judge replies with $0$.\n\n\n\nAuthor:\n7\xe2\x98\x85jtnydv25\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/HIDECELL\n\n\nTags:\n\n               \n                 Interactive Problems, Binary Search\n                 \n                     \n                     Special, Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3267\n\n\nDate Added:\n16-06-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"