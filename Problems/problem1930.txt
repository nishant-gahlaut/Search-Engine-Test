b'\nRead problems statements in mandarin chinese, russian and vietnamese as well.\n You have a perfect binary tree of height N. That is, it contains 2N+1 - 1 nodes.\nA path from the root to a leaf can be represented by an integer X which lies between 0 and 2N - 1 (both inclusive) as follows:\nConsider the N length binary representation of X. Start reading from the left, and at each bit, 0 denotes going to the left child, and 1 denotes going to the right child. For eg. if N = 2, and X = 0 = (00)2, it would correspond to the path which goes to the leftmost leaf. X = 3 = (11)2 would correspond to the path from root to the rightmost leaf.\nAt the beginning, X = 0, and you have visited only the root till now. Then, you get Q queries. A query can be of two types:\n\nType 1: "! C": This means that X has to be changed to X = ( X + 2C ) mod 2N, and then you start from the root, and walk down the route represented by the new X.\nType 2: "?": This means that you should print the number of nodes that you have visited at least once.\n\nInput\n\nThe first line contains a single integer T, which denotes the number of testcases. The description of each testcase follows.\nThe first line of each testcase contains two integers: N and Q, which denote the height of the tree and the number of the queries respectively.\nQ lines follow, which are the descriptions of the queries. Each line will either be a "! C" or a "?" (without quotes).\n\nOutput\nFor each query of Type 2, you have to print one integer in a new line\nConstraints\n\n1 \xe2\x89\xa4  T  \xe2\x89\xa4 10\n1 \xe2\x89\xa4  N, Q  \xe2\x89\xa4  105\n 0 \xe2\x89\xa4  C  <  N  \nThe sum of N over all testcases does not exceed 105, and sum of Q over all testcases does not exceed 105\n\nSubtasks\n\nSubtask 1 (30 points) : The sum of N over all testcases does not exceed 2000, and sum of Q over all testcases does not exceed 2000\nSubtask 2 (70 points) : Original constraints\n\nExample\nInput:\n1\n2 9\n! 0\n?\n! 1\n?\n! 0\n?\n! 0\n! 0\n? \n\nOutput:\n3\n5\n6\n7\n\nExplanation\nLet us label the tree nodes as follows:\n\n\n\nThe node 0 corresponds to the root.\nAt the beginning, X = 0, and then after the first query, X becomes 0 + 20 mod 4 = 1 = (01)2. The path 0 - 1 - 4 is traveled along.\nThe next query asks for the number of visited nodes, which is 3.\nIn the third query, X becomes 1 + 21 mod 4 = 3 = (11)2. The path 0 - 2 - 6 is traveled along.\nThe fourth query asks for the number of visited nodes. The visited nodes are {0, 1, 4, 2, 6}. Hence the answer is 5.\nIn the fifth query, X becomes 3 + 20 mod 4 = 0 = (00)2. The path 0 - 1 - 3 is traveled along.\nThe sixth query asks for the number of visited nodes. The visited nodes are {0, 1, 4, 2, 6, 3}. Hence the answer is 6.\nIn the seventh query, X becomes 0 + 20 mod 4 = 1 = (01)2. The path 0 - 1 - 4 is traveled along.\nIn the eight query, X becomes 1 + 20 mod 4 = 2 = (10)2. The path 0 - 2 - 5 is traveled along.\nThe ninth query asks for the number of visited nodes. The visited nodes are {0, 1, 4, 2, 6, 3, 5}. Hence the answer is 7.\n\n\n\nAuthor:\n5\xe2\x98\x85altruist_\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/WALKBT\n\n\nTags:\n\n               \n                 Persistent Segment Trees, Lazy Propagation, Longest Common Prefix\n                 \n                     \n                     Advanced Data Structures, Persistent Structures, Advanced Tree Structures, Segment Trees, Algorithms, Dynamic Programming, DP on sequences\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2805\n\n\nDate Added:\n21-07-2017\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'