b"\nJJ is back with another challenge. He challenges you to construct an array AA containing NN integers such that the following conditions hold:\n\nFor all 1\xe2\x89\xa4i\xe2\x89\xa4N1\xe2\x89\xa4i\xe2\x89\xa4N, 1\xe2\x89\xa4Ai\xe2\x89\xa41061\xe2\x89\xa4Ai\xe2\x89\xa4106\nEvery subarray has non-zero XOR. That is, for every 1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N1\xe2\x89\xa4L\xe2\x89\xa4R\xe2\x89\xa4N, AL\xe2\x8a\x95AL+1\xe2\x8a\x95\xe2\x80\xa6\xe2\x8a\x95AR\xe2\x89\xa00AL\xe2\x8a\x95AL+1\xe2\x8a\x95\xe2\x80\xa6\xe2\x8a\x95AR\xe2\x89\xa00. Here, \xe2\x8a\x95\xe2\x8a\x95 denotes the bitwise XOR operation.\n\nCan you complete JJ's challenge?\nUnder the given constraints, it can be proved that there always exists at least one array satisfying these conditions. If there are multiple possible arrays, print any of them.\nInput Format\n\nThe first line contains a single integer TT, denoting the number of test cases. The description of TT test cases follows.\nThe first and only line of each test case contains an integer NN \xe2\x80\x94 the size of the array AA to be constructed.\n\nOutput Format\nFor each test case, output a single line containing NN space-separated integers, denoting the elements of array AA. The ithith of these NN integers is AiAi. If multiple arrays exist which satisfy the conditions, print any of them.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa410001\xe2\x89\xa4T\xe2\x89\xa41000\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105\nIt is guaranteed that the sum of NN over all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n1\n6\n6\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n1 2 4 8 16 32\n2 3 5 7 11 13\n\n\nExplanation\nTest Case 11: There is only one subarray, [7][7]. Its XOR is non-zero.\nTest Case 22: Some of the subarray XORS are:\n\nXOR([2,4,8])=14\xe2\x89\xa00XOR([2,4,8])=14\xe2\x89\xa00\nXOR([1,2])=3\xe2\x89\xa00XOR([1,2])=3\xe2\x89\xa00\nXOR([4,8,16,32])=60\xe2\x89\xa00XOR([4,8,16,32])=60\xe2\x89\xa00.\n\nSimilarly, it can be checked that every subarray has non-zero XOR.\nTest Case 33: Some of the subarray XORS are:\n\nXOR([2,3,5,7])=3\xe2\x89\xa00XOR([2,3,5,7])=3\xe2\x89\xa00\nXOR([7,11])=12\xe2\x89\xa00XOR([7,11])=12\xe2\x89\xa00\nXOR([2,3,5,7,11,13])=5\xe2\x89\xa00XOR([2,3,5,7,11,13])=5\xe2\x89\xa00\n\nSimilarly, it can be checked that every subarray has non-zero XOR.\n\n\n\nAuthor:\n6\xe2\x98\x85jeevanjyot\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SUBARRAYXOR\n\n\nTags:\n\n               \n                 bitwise-xor, easy, jeevanjyot, start23\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2101\n\n\nDate Added:\n24-01-2022\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"