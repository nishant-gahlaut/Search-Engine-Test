b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nConsider NN parallel wires running from left to right. The wires are numbered 11 through NN from top to bottom. There are MM devices called balancers, numbered 11 through MM from left to right. For each valid ii, balancer ii connects wires xixi and yiyi (xi<yixi<yi). Let\'s call such a structure of wires and balancers a balancing network.\n\nEach balancer can be directed either upwards or downwards. The directions of all balancers define the state of the balancing network.\nConsider a token that starts moving to the right along some wire, from a point on that wire which is to the left of all balancers. During this process, the token encounters each balancer exactly once. Whenever the token encounters a balancer ii, the following happens:\n\nif the token is moving along the wire xixi and balancer ii is directed downwards, the token moves down to the wire yiyi\notherwise, if the token is moving along the wire yiyi and balancer ii is directed upwards, the token moves up to the wire xixi\nin all other cases, the token does not move to a different wire\nafterwards, the token keeps moving to the right\n\nWe say that a state of the balancing network:\n\ntransforms a wire ii into a wire jj, if a token that starts moving along the wire ii ends up on the wire jj after passing through all MM balancers\nunifies wires ii and jj, if it transforms both of these wires into the same wire (possibly different from each of them)\nis kk-non-unifying, if there is a set of kk distinct wires such that this state does not unify any pair of wires from this set\n\nFor a given balancing network, please find any \xe2\x8c\x88N2\xe2\x8c\x89\xe2\x8c\x88N2\xe2\x8c\x89-non-unifying state or determine that there is no such state.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space-separated integers NN and MM.\nMM lines follow. For each ii (1\xe2\x89\xa4i\xe2\x89\xa4M1\xe2\x89\xa4i\xe2\x89\xa4M), the ii-th of these lines contains two space-separated integers xixi and yiyi.\n\nOutput\nFor each test case:\n\nIf there is no \xe2\x8c\x88N2\xe2\x8c\x89\xe2\x8c\x88N2\xe2\x8c\x89-non-unifying state for the given balancing network, print a single line containing the string "failure" (without quotes).\nOtherwise, print a single line containing a string with length MM. This string should describe some \xe2\x8c\x88N2\xe2\x8c\x89\xe2\x8c\x88N2\xe2\x8c\x89-non-unifying state. For each valid ii, its ii-th character should be either \'^\' if the ii-th balancer is directed upwards or \'v\' if the ii-th balancer is directed downwards.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41031\xe2\x89\xa4T\xe2\x89\xa4103\n2\xe2\x89\xa4N\xe2\x89\xa41062\xe2\x89\xa4N\xe2\x89\xa4106\n1\xe2\x89\xa4M\xe2\x89\xa41061\xe2\x89\xa4M\xe2\x89\xa4106\n1\xe2\x89\xa4xi<yi\xe2\x89\xa4N1\xe2\x89\xa4xi<yi\xe2\x89\xa4N for each valid ii\nthe sum of NN over all test cases does not exceed 106106\nthe sum of MM over all test cases does not exceed 106106\n\nSubtasks\nSubtask #1 (7 points): M\xe2\x89\xa410M\xe2\x89\xa410\nSubtask #2 (14 points):\n\nN\xe2\x89\xa410N\xe2\x89\xa410\nM\xe2\x89\xa4103M\xe2\x89\xa4103\nthe sum of MM over all test cases does not exceed 104104\n\nSubtask #3 (29 points): N,M\xe2\x89\xa4100N,M\xe2\x89\xa4100\nSubtask #4 (50 points): original constraints\nExample Input\n2\n3 3\n1 2\n2 3\n1 3\n5 6\n1 2\n3 4\n1 3\n2 4\n2 3\n1 4\n\nExample Output\n^^^\nv^vv^v\n\nExplanation\nExample case 1: The state where all balancers are directed upwards ("^^^") transforms wire 11 into itself, wire 22 into wire 11 and wire 33 into wire 22. We can see that this state does not unify wires 11 and 33 (or wires 22 and 33), thus it is 22-non-unifying. Another 22-non-unifying state of this balancing network is "^^v". The remaining 66 states are not 22-non-unifying.\nExample case 2:\n\n\n\n\nAuthor:\n7\xe2\x98\x85alex_2oo8\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BALNET\n\n\nTags:\n\n               \n                 Observation, Implementation\n                 \n                     \n                     Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2894\n\n\nDate Added:\n7-01-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'