b"\n\nChef Ciel defined a sequence S as follows:\nS[1] = A\nS[2] = B\nS[i] = (X*S[i-1] + Y*S[i-2] + Z) mod P, for i >= 3\n\n\nCiel considers C is a lucky number, and the i-th day is a lucky day if and only if S[i] = C.\nCiel's restaurant may have special events in a lucky day.\n\n\nBy the way, your work is calculating the numbers of lucky days in intervals.\nThat is, for each Q intervals [L[i], R[i]], \nyou should calculate the number of the integers k which satisfy L[i] <= k <= R[i] and S[k] = C.\n\nInput\n\nThe first line contains an integer T, the number of test cases.\nThen T test cases follow.\nThe first line for each test case has 8 integers A, B, X, Y, Z, P, C and Q.\nThe next Q lines have 2 integers L[i] and R[i].\n\nOutput\n\nFor each interval, print the number of lucky days in the interval.\n\nConstraints\n\n1 <= T <= 2\n2 <= P <= 10007\nP is a prime.\n0 <= A, B, X, Y, Z, C < P\n1 <= Q <= 20000 (2*10^4)\n1 <= L[i] <= R[i] <= 1000000000000000000 (10^18)\n\nSample Input\n2\n1 1 1 1 0 2 0 6\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n1 2 4 5 3 17 4 3\n5 8\n5 58\n58 5858\nSample Output\n0\n0\n1\n0\n0\n1\n0\n4\n362\nOutput details\n\nIn the first case:\nS[1] = A = 1\nS[2] = B = 1\nS[3] = (S[2] + S[1]) mod 2 = (1 + 1) mod 2 = 0\nS[4] = (S[3] + S[2]) mod 2 = (0 + 1) mod 2 = 1\nS[5] = (S[4] + S[3]) mod 2 = (1 + 0) mod 2 = 1\nS[6] = (S[5] + S[4]) mod 2 = (1 + 1) mod 2 = 0\nS[7] = (S[6] + S[5]) mod 2 = (0 + 1) mod 2 = 1\n\n\n\n\nAuthor:\nhiroto_adm\n\n\nTester:\n4\xe2\x98\x85chmel_tolstiy\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/LUCKYDAY\n\n\nTags:\n\n               \n                 Meet in the middle, Binary Search\n                 \n                     \n                     Algorithms, Searching\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2392\n\n\nDate Added:\n1-10-2011\n\n\nTime Limit:\n0.529322 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"