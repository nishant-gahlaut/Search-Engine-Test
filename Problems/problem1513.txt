b"\nDave recently mastered the problem of placing N queens on a chessboard so\nthat no two queens attack eachother.\nNow he wants to see how many knights he can place on a chessboard so\nthat no two knights attack eachother.\nNormally this would be a simple task, but some of the squares of the\nchessboard have been marked as unusable and hence cannot have a knight placed\non them.\nRecall that a knight can attack another knight if their vertical distance\nis 2 and their horizontal distance is 1, or if their vertical distance is 1 and\ntheir horizontal distance is 2.  Only one knight may be placed on each square\nof the chessboard\nInput\nThe first line of input contains an integer T (0<T\xe2\x89\xa450), the number of test cases to follow.\nEach test case will begin with a line containing 2 integers M and N (0<M,N\xe2\x89\xa430), \ndenoting the number of rows and columns, respectively.\nM lines follow, each containing exactly N characters.\nThe j-th character of the i-th line is '.' if a knight may be placed in the j-th column of the i-th\nrow, and '#' if the square is unusable.\nOutput\nFor each test case, output on a single line the maximum number of knights that may be placed\non the chessboard such that no two attack each other.\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n2 4\n....\n....\n5 5\n..#..\n#..#.\n##...\n...##\n.....\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n4\n11\n\n\nExplanation\nThe following image represents the chessboard and a possible solution to the second test case:\n\n\n\nAuthor:\ndavid_adm\n\n\nTester:\nfriggstad\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/KNIGHTS\n\n\nTags:\n\n               \n                 Graphs, Bipartite Graphs, Maximum Bipartite Matching\n                 \n                     \n                     Data Structures, Advanced Algorithms, Advanced Graph Algos, Flow Networks\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2047\n\n\nDate Added:\n9-11-2010\n\n\nTime Limit:\n0.294118 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, D, CAML, FORT, ASM, WSPC, LISP clisp, SCM guile, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"