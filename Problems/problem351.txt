b"\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nRecently, Chef studied the binary numeral system and noticed that it is extremely simple to perform bitwise operations like AND, XOR or bit shift on non-negative integers, while it is much more complicated to perform arithmetic operations (e.g. addition, multiplication or division).\nAfter playing with binary operations for a while, Chef invented an interesting algorithm for addition of two non-negative integers AA and BB:\nfunction add(A, B):\n    while B is greater than 0:\n        U = A XOR B\n        V = A AND B\n        A = U\n        B = V * 2\n    return A\n\nNow Chef is wondering how fast this algorithm is. Given the initial values of AA and BB (in binary representation), he needs you to help him compute the number of times the while-loop of the algorithm is repeated.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single string AA.\nThe second line contains a single string BB.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the number of iterations the algorithm will perform during addition of the given numbers AA and BB.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4|A|,|B|\xe2\x89\xa41051\xe2\x89\xa4|A|,|B|\xe2\x89\xa4105\nAA and BB contain only characters '0' and '1'\nthe sum of |A|+|B||A|+|B| over all test cases does not exceed 106106\n\nSubtasks\nSubtask #1 (20 points): |A|,|B|\xe2\x89\xa430|A|,|B|\xe2\x89\xa430\nSubtask #2 (30 points):\n\n|A|,|B|\xe2\x89\xa4500|A|,|B|\xe2\x89\xa4500\nthe sum of |A|+|B||A|+|B| over all test cases does not exceed 105105\n\nSubtask #3 (50 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n100010\n0\n0\n100010\n11100\n1010\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n0\n1\n3\n\n\nExplanation\nExample case 1: The initial value of BB is 00, so while-loop is not performed at all.\nExample case 2: The initial values of AA and BB are 02=002=0 and 1000102=341000102=34 respectively. When the while-loop is performed for the first time, we have:\n\nU=34U=34\nV=0V=0\nAA changes to 3434\nBB changes to 2\xe2\x8b\x850=02\xe2\x8b\x850=0\n\nThe while-loop terminates immediately afterwards, so it is executed only once.\nExample case 3: The initial values of AA and BB are 111002=28111002=28 and 10102=1010102=10 respectively. After the first iteration, their values change to 2222 and 1616 respectively. After the second iteration, they change to 66 and 3232, and finally, after the third iteration, to 3838 and 00.\n\n\n\nAuthor:\n7\xe2\x98\x85alex_2oo8\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/BINADD\n\n\nTags:\n\n               \n                 String, Bitwise Operation, Binary\n                 \n                     \n                     Data Structures, Mathematics, Bit Manipulation, Number System\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1927\n\n\nDate Added:\n4-12-2019\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"