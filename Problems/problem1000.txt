b'\nThere are NN stones in a pond, each having a value AiAi written on it. A frog is at stone 11 and wants to reach stone NN. The frog can jump from a stone ii to any stone j(j>i)j(j>i). Let dd be the length of subarray (i.e. j\xe2\x88\x92i+1j\xe2\x88\x92i+1), then the energy required for the jump is (d\xe2\x8b\x85Ai)\xe2\x88\x92Aj(d\xe2\x8b\x85Ai)\xe2\x88\x92Aj. Find the minimum non-negative amount of energy required by the frog to reach the NN-th stone.\nNote: It is possible that the total amount of energy required is negative, in that case, you should print the minimum non-negative value (i.e. 00).\nInput Format\n\nThe first line contains an integer TT - the number of test cases. Then the test cases follow.\nThe first line of each test case contains an integer NN - the number of stones.\nThe second line contains NN integers denoting the numbers written on the stones.\n\nOutput Format\nFor each test case output a single integer - the minimum non-negative energy required by the frog.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa425001\xe2\x89\xa4T\xe2\x89\xa42500 - the number of test cases\n1\xe2\x89\xa4N\xe2\x89\xa41051\xe2\x89\xa4N\xe2\x89\xa4105 - the number of stones.\n1\xe2\x89\xa4Ai\xe2\x89\xa41091\xe2\x89\xa4Ai\xe2\x89\xa4109 - the number written on stones.\nSum of NN over all test cases does not exceed 5\xe2\x8b\x851055\xe2\x8b\x85105\n\nSubtasks\n\nSubtask 1 (5 points): 1\xe2\x89\xa4N\xe2\x89\xa410,1\xe2\x89\xa4Ai\xe2\x89\xa4100,\xe2\x88\x91N\xe2\x89\xa4501\xe2\x89\xa4N\xe2\x89\xa410,1\xe2\x89\xa4Ai\xe2\x89\xa4100,\xe2\x88\x91N\xe2\x89\xa450\nSubtask 2 (10 points): 1\xe2\x89\xa4N\xe2\x89\xa4100,1\xe2\x89\xa4Ai\xe2\x89\xa4100,\xe2\x88\x91N\xe2\x89\xa45001\xe2\x89\xa4N\xe2\x89\xa4100,1\xe2\x89\xa4Ai\xe2\x89\xa4100,\xe2\x88\x91N\xe2\x89\xa4500\nSubtask 3 (15 points): 1\xe2\x89\xa4N\xe2\x89\xa41000,\xe2\x88\x91N\xe2\x89\xa450001\xe2\x89\xa4N\xe2\x89\xa41000,\xe2\x88\x91N\xe2\x89\xa45000\nSubtask 4 (70 points): original constraints\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4\n3\n6 1 3\n4\n3 1 10 4\n3\n7 9 1\n2\n1 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n10\n4\n20\n0\n\n\nExplanation\n\nTest Case 11: The frog can jump to the 2nd2nd stone from the 1st1st stone, and then to the 3rd3rd stone from the 2nd2nd stone.\nTest Case 33: The frog can jump to the 3rd3rd stone directly from the 1st1st stone.\nTest Case 44: The frog can jump to the 2nd2nd stone from the 1st1st stone. However, the energy required in this case is negative (i.e. \xe2\x88\x923\xe2\x88\x923), So we will print 00.\n\n\n\n\nAuthor:\n5\xe2\x98\x85poetic_soul\n\n\nTester:\n7\xe2\x98\x85aryanc403\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SUBJUMP\n\n\nTags:\n\n               \n                 1D Arrays, Bottom-up, Greedy\n                 \n                     \n                     Data Structures, Arrays, Algorithms, Dynamic Programming, DP Approach\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2369\n\n\nDate Added:\n26-11-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'