b"\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\n\nWatson has infinite supply of K different type of objects denoted by numbers 1 to K. He makes an array A of N objects, A1, A2, ..., AN using these objects.\nNow, he'll update this array Q times. In ith update, he'll replace an existing object in array with a new object of different type from 1 to K i.e. Axi = yi.\n\n\nAfter each update, he wants Sherlock to report the smallest size of a contiguous subarray which contains all types of objects i.e. smallest value of R - L + 1 such that number of distinct values in AL, AL + 1, ..., Ar is K. If no such subarray exists, Sherlock should output -1.\n\nInput\n\nFirst line contains N, K and Q denoting number of array elements, number of different types of objects and number of updates. Next line contains N space separated integers denoting the initial array A. ith of the next Q lines contains integers xi and yi, denoting the update parameters of the ith update.\n\nOutput\n\nAfter each update, output an integer in one line denoting the smallest contiguous subarray size consisting of all types of objects. If no such subarray exists, output -1.\n\nConstraints\n\n1 \xe2\x89\xa4 N \xe2\x89\xa4 105\n1 \xe2\x89\xa4 K \xe2\x89\xa4 20\n1 \xe2\x89\xa4 Q \xe2\x89\xa4 105\n1 \xe2\x89\xa4 xi \xe2\x89\xa4 N\n1 \xe2\x89\xa4 Ai, yi \xe2\x89\xa4 K\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n5 3 3\n1 1 1 1 1\n2 3\n5 2\n3 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n-1\n4\n3\n\n\nExplanation\n\nAfter first update, the array is [1, 3, 1, 1, 1]. No valid subarray exists at this stage.\nAfter next update, the array is [1, 3, 1, 1, 2]. Here you can observe that contiguous subarray [A2, A3, ..., A5] consists of all types of objects. \nAfter next update, the array is [1, 3, 2, 1, 2]. Now, contiguous subarray [A1, A2, A3] is the smallest valid subarray.\n\n\n\n\nAuthor:\n4\xe2\x98\x85darkshadows\n\n\nTags:\n\n               \n                 Deque, Segment Trees, Bitmasking, Two pointers\n                 \n                     \n                     Data Structures, Queues, Advanced Data Structures, Advanced Tree Structures, Mathematics, Bit Manipulation, Algorithms, Simple Algos\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2936\n\n\nDate Added:\n5-10-2016\n\n\nTime Limit:\n3 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"