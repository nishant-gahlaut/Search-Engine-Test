b"\nRead problem statements in Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nThis in an interactive problem\nBrahma created a bidimensional world, he started from a giant circle and placed 2\xe2\x8b\x85N2\xe2\x8b\x85N points (numbered 11 through 2\xe2\x8b\x85N2\xe2\x8b\x85N) in clockwise order on the circumference. Then Brahma created many regions by consecutively taking two of the points and slicing the circle with a line segment connecting them. The slices are such that the following conditions are satisfied:\n\nThere is exactly one slice going through each point on the perimeter\nNo three segments intersect at one point\nThere are no three segments that pairwise intersect each other\n\nAfter the slices, the points resulting from the intersection of two segments were numbered arbitrarily with consecutive integers from 2\xe2\x8b\x85N+12\xe2\x8b\x85N+1 through VV. An unordered pair (p,q)(p,q) is good, if there is a slice that passes through points pp and qq, and none of the other V\xe2\x88\x922V\xe2\x88\x922 points lies in the segment pqpq. There are  in total MM distinct good pairs, for each valid ii, the i\xe2\x88\x92i\xe2\x88\x92th good pair is (pi,qi)(pi,qi).\nBrahma stablished a city in each of the connected regions with finite area (numbered 11 through CC). For each valid ii, let RiRi denote the sequence of indices of the points on the perimeter of the ii-th region in increasing order. Brahma numbered the cities in lexicographically increasing order (Ri<Ri+1Ri<Ri+1).\nThen, each of the KK gods chose one of the regions to build their home, no city was chosen as the home of more than one god. Let SS be the set of cities chosen by the gods.\nIt is possible to travel from one city to another, if their respective regions share an edge. Let D(u,v)D(u,v) be the length of the shortest path between cities uu and vv i.e the minimum number of edges we have to cross to go from uu to vv. The beauty of city uu is given by 1\xe2\x88\x91v\xe2\x88\x88SD(u,v)1\xe2\x88\x91v\xe2\x88\x88SD(u,v). The cities that have the maximum beauty among all the cities are called holy cities.\nSome eons later, Shiva decided that is time to destroy the world, the only way to calm his fury is to build a shrine in each holy city. After so much time we don't remember which cities are holy neither which cities are home of a god! However we have a plan, we'll organize many festivities to gather information. In each festivity the following happens: \n\nWe choose two cities uu, vv (u\xe2\x89\xa0vu\xe2\x89\xa0v) and all the gods are invited to go to any of those cities.\nEach god goes to the city nearest to their home. if both uu and vv are at the same distance, then that god does not assist to the festivity.\nWe count the number of gods that assisted to each of the two cities.\n\nYour task is to save the world by organizing at most CC festivities to find the holy cities.\nInteraction\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of interaction for TT test cases follows.\nFor each test case, you should start by reading a line containing four space-separated integers NN, VV, MM, KK.\nThe next MM lines contains two space-separated integers pipi and qiqi.\nThen, you may start organizing the festivities.\nTo create a festivity, you should print a line containing three space-separated integers 11, uu, vv.\nThen, you should read a line containing two space-seprated integers xx, yy \xe2\x80\x95 the number of gods that attended city uu and vv respectively.\nIf the festivity is invalid or if you organized too many festivities, you will receive the wrong answer verdict.\nWhen you have determined which are the holy cities, you should print a line containing L+2L+2 space-separated integers 22, LL, H1H1,\xe2\x80\xa6, HLHL, where for each valid ii, HiHi is the index of the ii-th holy city in increasing order (Hi<Hi+1Hi<Hi+1).\n\nDon't forget to flush the output after printing each line!\nConstraints\n\n4\xe2\x89\xa4C\xe2\x89\xa43004\xe2\x89\xa4C\xe2\x89\xa4300\nThe sum of CC over all test cases doesn't exceed 104104\n2\xe2\x89\xa4K\xe2\x89\xa4C2\xe2\x89\xa4K\xe2\x89\xa4C\nIs guaranteed that there is only one way of reconstructing the cities from the MM good pairs.\n\nSubtasks\nSubtask #1 (20 points): K=2K=2\nSubtask #2 (80 points): Original constraints\nExample\nGrader          You\n1\n4 10 8 2\n1 10\n2 10\n3 9\n4 9\n5 9\n6 10\n7 8\n9 10\n                1 3 7\n1 1                                                               \n                1 1 5\n1 1\n                2 6 1 2 3 4 5 6\n\nExplanation\nThe following figure describes the cities created by Brahma\n\nThe cities are numbered lexicographically. R2=(1,6,7,8,10)R2=(1,6,7,8,10), R6=(5,6,9,10)R6=(5,6,9,10), R7=(7,8)R7=(7,8)\nThere are two gods at cities 22 and 44. \nIn the second festivity, the god at city 22 goes to city 11, and the god at city 44 goes to 55. \nAll cities except 77 are holy.\n\n\n\nAuthor:\n7\xe2\x98\x85alei\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SHRINES\n\n\nTags:\n\n               \n                 alei, april21, geometry, hard, interactive, planar-graphs\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3150\n\n\nDate Added:\n26-03-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"