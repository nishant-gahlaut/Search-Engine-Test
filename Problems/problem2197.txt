b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nChef likes tournament graphs, which are directed graphs where each unordered pair of vertices is directly connected by exactly one edge. A directed graph is strongly connected if for each pair of vertices (a,b)(a,b), there is a path from the vertex aa to the vertex bb.\nConsider a tournament graph GG with NN vertices (numbered 11 through NN). Chef takes a sequence of pairs of vertices (a1,b1),(a2,b2),\xe2\x80\xa6,(aM,bM)(a1,b1),(a2,b2),\xe2\x80\xa6,(aM,bM) and does the following for each ii from 11 to MM in this order:\n\nFlip the direction of the edge between vertices aiai and bibi.\nIf the graph is strongly connected either before or after flipping this edge, declare GG a bad tournament.\n\nIf GG is never declared a bad tournament, Chef calls it a good tournament. Given the sequence of MM edge flips, find a good tournament.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains two space-separated integers NN and MM.\nMM lines follow. For each valid ii, the ii-th of these lines contains two space-separated integers aiai and bibi.\n\nOutput\nFor each test case, print N\xe2\x88\x921N\xe2\x88\x921 lines. For each valid ii, the ii-th of these lines should contain N\xe2\x88\x92iN\xe2\x88\x92i space-separated integers; for each valid jj, the jj-th of these integers should be 11 if there is an edge from the vertex ii to the vertex i+ji+j or 00 if there is an edge from the vertex i+ji+j to the vertex ii.\nIt can be proved that a good tournament always exists under the given constraints. If there are multiple solutions, you may print any one of them.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa44001\xe2\x89\xa4T\xe2\x89\xa4400\n6\xe2\x89\xa4N\xe2\x89\xa44006\xe2\x89\xa4N\xe2\x89\xa4400\nthe sum of NN over all test cases does not exceed 4,0004,000\n\nSubtasks\nSubtask #1 (30 points): M=N\xe2\x88\x922M=N\xe2\x88\x922\nSubtask #2 (40 points): M=\xe2\x8c\x883N2\xe2\x8c\x89\xe2\x88\x923M=\xe2\x8c\x883N2\xe2\x8c\x89\xe2\x88\x923\nSubtask #3 (30 points): M=2N\xe2\x88\x9211M=2N\xe2\x88\x9211\nExample Input\n1\n6 4\n1 3\n3 4\n2 6\n5 6\n\nExample Output\n1 0 1 1 1\n0 0 0 1\n1 1 1\n1 1\n0\n\n\n\n\nAuthor:\n6\xe2\x98\x85mohammed200218\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/EFLIP\n\n\nTags:\n\n               \n                 constructive, depth-first-search, graphs, hard, ltime89, mohammed200218, mohammed200218, psychik\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3468\n\n\nDate Added:\n16-10-2020\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'