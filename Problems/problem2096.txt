b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese as well.\nYou are given a tree with NN vertices (numbered 11 through NN). Each edge of this tree is coloured either black or white.\nA single-colour subtree of this tree is a non-empty maximal set SS of its edges such that all edges in SS have the same colour and each of these edges can be reached from any other edge in SS by only traversing edges from SS. A maximal set is a set to which we cannot add any edge without breaking this property.\nYou should process QQ queries. In each query, you are given two vertices uu and vv. Flip the colour of each edge on the path between uu and vv (black edges become white and white edges become black) and then compute the number of single-colour subtrees of the tree. The colours of the edges remain flipped in the subsequent queries.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nEach of the next N\xe2\x88\x921N\xe2\x88\x921 lines contains three space-separated integers aa, bb and cc denoting that there is an edge between vertices aa and bb with colour cc; a black edge is denoted by c=0c=0 and a white edge by c=1c=1.\nThe next line contains a single integer QQ.\nThe following QQ lines describe queries. Each of these lines contains two space-separated integers uu and vv.\n\nOutput\nFor each query, print a single line containing one integer \xe2\x80\x94 the number of single-colour subtrees.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41001\xe2\x89\xa4T\xe2\x89\xa4100\n1\xe2\x89\xa4N,Q\xe2\x89\xa41051\xe2\x89\xa4N,Q\xe2\x89\xa4105\n1\xe2\x89\xa4a,b,u,v\xe2\x89\xa4N1\xe2\x89\xa4a,b,u,v\xe2\x89\xa4N\n0\xe2\x89\xa4c\xe2\x89\xa410\xe2\x89\xa4c\xe2\x89\xa41\nthe graph described on the input is a tree\nthe sum of NN over all test cases does not exceed 3\xe2\x8b\x851053\xe2\x8b\x85105\nthe sum of QQ over all test cases does not exceed 3\xe2\x8b\x851053\xe2\x8b\x85105\n\nSubtasks\nSubtask #1 (100 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n4\n1 2 0\n2 3 0\n3 4 1\n3\n2 3\n1 4\n3 4\n7\n1 2 0\n2 3 0\n5 4 1\n4 3 1\n6 3 0\n7 6 0\n2\n2 6\n5 3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n2\n2\n3\n3\n4\n\n\n\n\n\nAuthor:\n7\xe2\x98\x85watcher\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/EDGY\n\n\nTags:\n\n               \n                 Trees, Lazy Propagation, HLD, Coloring, Lowest Common Ancestor, DFS\n                 \n                     \n                     Data Structures, Graphs, Advanced Data Structures, Advanced Tree Structures, Segment Trees, Advanced Algorithms, Advanced Graph Algos, Algorithms, Graph Algos, Traversals\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2775\n\n\nDate Added:\n27-03-2019\n\n\nTime Limit:\n5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'