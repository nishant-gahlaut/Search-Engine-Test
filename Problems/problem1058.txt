b"\nYou are given a binary square matrix AA of size N\xc3\x97NN\xc3\x97N. Let the value at cell (i,j)(i,j) be denoted by A(i,j)A(i,j).\nYour task is to count the number of square frames present in the grid. A square frame is defined to be a square submatrix of AA whose border elements are all '1'. \nFormally,\n\nA square submatrix of AA of size kk with top-left corner (i,j)(i,j) is defined to be the set of cells {(i+x,j+y)\xe2\x88\xa30\xe2\x89\xa4x,y<k}{(i+x,j+y)\xe2\x88\xa30\xe2\x89\xa4x,y<k}. Note that this requires i+k\xe2\x88\x921\xe2\x89\xa4Ni+k\xe2\x88\x921\xe2\x89\xa4N and j+k\xe2\x88\x921\xe2\x89\xa4Nj+k\xe2\x88\x921\xe2\x89\xa4N.\nA square frame of size kk with top-left corner (i,j)(i,j) is defined to be a square submatrix of size kk such that A(i+x,j+y)=A(i+x,j+y)= 1 whenever x=0x=0 or y=0y=0 or x=k\xe2\x88\x921x=k\xe2\x88\x921 or y=k\xe2\x88\x921y=k\xe2\x88\x921. There is no constraint on the values of elements strictly inside the frame.\n\nRefer to the sample explanation for more details.\nInput Format\nThe first line of input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN denoting the size of the grid.\nEach of the next NN lines contains a string consisting of NN characters. The ii-th such string represents the ii-th row of AA. Each character of each string is either 0 or 1.\nOutput Format\nFor each test case, output a single integer denoting the count of square frames in the grid.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41051\xe2\x89\xa4T\xe2\x89\xa4105\n1\xe2\x89\xa4N\xe2\x89\xa45001\xe2\x89\xa4N\xe2\x89\xa4500\nThe grid is binary, i.e, A(i,j)=A(i,j)= 0 or 1 for every 1\xe2\x89\xa4i,j\xe2\x89\xa4N1\xe2\x89\xa4i,j\xe2\x89\xa4N.\nSum of N2N2 over all test cases does not exceed 106106.\n\nSubtasks\nSubtask 1(100 points): Original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n2\n10\n00\n4\n1111\n1101\n1011\n1111\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1\n17\n\n\nExplanation\nTest Case 11: There is 11 square frame, the submatrix containing index (1,1)(1,1). \nTest Case 22: There are 1414 square frames of size 11, 22 of size 22, and 11 of size 44.\nSome of the square frames are : \n\nThe frame of size 11 containing point (3,3)(3,3).\nThe frame of size 22 with corner points (1,1),(1,2),(2,2),(2,1)(1,1),(1,2),(2,2),(2,1).\nThe frame of size 22 with corner points (3,3),(4,3),(4,4),(3,4)(3,3),(4,3),(4,4),(3,4).\nThe frame of size 44 with corner points (1,1),(1,4),(4,4),(4,1)(1,1),(1,4),(4,4),(4,1). \n\n\n\n\nAuthor:\nnishant_adm\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/GRIDSQRS\n\n\nTags:\n\n               \n                 Segment Trees, Fenwick Trees, Loops, Conditional Statements, Pre processing\n                 \n                     \n                     Advanced Data Structures, Advanced Tree Structures, Basic Programming Concepts, Advanced Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2465\n\n\nDate Added:\n3-12-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"