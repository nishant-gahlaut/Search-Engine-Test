b"\nChef built a binary string SS that has exactly NN hills and MM valleys.\n\nA hill is any index 1<i<|S|1<i<|S| such that both its neighbors are strictly smaller than it, i.e, Si\xe2\x88\x921<SiSi\xe2\x88\x921<Si and Si+1<SiSi+1<Si.\nA valley is any index 1<i<|S|1<i<|S| such that both its neighbors are strictly larger than it, i.e, Si\xe2\x88\x921>SiSi\xe2\x88\x921>Si and Si+1>SiSi+1>Si.\n\nChef thinks that his string SS is the shortest among all binary strings with NN hills and MM valleys.  You don't quite trust his words, so to verify his claim you would like to find the shortest binary string with exactly NN hills and MM valleys.\nIf there are multiple possible binary strings of the least length satisfying the given condition, you may print any of them.\nInput Format\n\nThe first line of input will contain a single integer TT, denoting the number of test cases. The description of TT test cases follows.\nThe first and only line of each test case contains two space-separated integers NN and MM, the required number of hills and valleys respectively.\n\nOutput Format\nFor each test case, output two lines.\n\nThe first line contains the length of the binary string you constructed to satisfy the given conditions.\nThe second line contains the string itself.\n\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa425001\xe2\x89\xa4T\xe2\x89\xa42500\n1\xe2\x89\xa4N\xe2\x89\xa45001\xe2\x89\xa4N\xe2\x89\xa4500\n1\xe2\x89\xa4M\xe2\x89\xa45001\xe2\x89\xa4M\xe2\x89\xa4500\nThe sum of lengths of the answer strings across all test cases does not exceed 2\xe2\x8b\x851052\xe2\x8b\x85105\n\nSubtasks\nSubtask 1 (10 points): \n\n1\xe2\x89\xa4N\xe2\x89\xa4501\xe2\x89\xa4N\xe2\x89\xa450\n1\xe2\x89\xa4M\xe2\x89\xa4501\xe2\x89\xa4M\xe2\x89\xa450\nYou may output any string of length not exceeding 320320 containing exactly NN hills and MM valleys:  it need not be shortest by length. It is guaranteed that at least one such string with length \xe2\x89\xa4320\xe2\x89\xa4320 exists.\n\nSubtask 2 (90 points):\n\nOriginal constraints\nThe binary string you construct must be shortest by length.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n3\n3 2\n2 3\n3 3\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n0101010\n7\n1010101\n8\n01010101\n\n\nExplanation\nTest case 11: The given string has hills at indices 2,4,62,4,6 and valleys at indices 3,53,5. It can be verified that there is no string of length 66 or less with 33 hills and 22 valleys.  Note that for subtask 11, a binary string like 001010100001010100 will also be accepted as a valid output, even though it is not shortest by length. \nTest case 33: Apart from the given string, another possible string of length 88 that has 33 hills and 33 valleys is 1010101010101010. You may print any of them.\n\n\n\nAuthor:\n5\xe2\x98\x85tejas10p\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/VANDH\n\n\nTags:\n\n               \n                 String, ad-hoc\n                 \n                     \n                     Data Structures, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\nN/A\n\n\nDate Added:\n1-12-2021\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n"