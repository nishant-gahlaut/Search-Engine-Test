b'\nChef is good at making pancakes. Generally he gets requests to serve N pancakes at once.\nHe serves them in the form of a stack.\nA pancake can be treated as a circular disk with some radius.\nChef needs to take care that when he places a pancake on the top of the stack the radius of the pancake should not exceed the radius of the largest pancake in the stack by more than 1. \nAdditionally all radii should be positive integers, and the bottom most pancake should have its radius as\xc2\xa01.\nChef wants you to find out in how many ways can he create a stack containing N pancakes.\nInput\nFirst line of the input contains T (T <= 1000) denoting the number of test cases.\nT lines follow each containing a single integer N (1 <= N <= 1000) denoting the size of the required stack.\nOutput\nFor each case the output should be a single integer representing the number of ways a stack of size N can be created. As the answer can be large print it modulo 1000000007.\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n1\n2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n1\n2\n\n\n\n\n\nAuthor:\nkaush_adm\n\n\nTester:\n6\xe2\x98\x85laycurse\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/PANSTACK\n\n\nTags:\n\n               \n                 Pre processing, Dynamic Programming\n                 \n                     \n                     Advanced Algorithms, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1679\n\n\nDate Added:\n1-03-2012\n\n\nTime Limit:\n0.206897 secs\n\n\nSource Limit:\n5000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'