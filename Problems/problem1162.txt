b'\nIn Conway\'s Game of Life, cells in a grid are used to simulate biological cells.\nEach cell is considered to be either alive or dead.\nAt each step of the simulation\neach cell\'s current status and number of living neighbors is used to determine the status\nof the cell during the following step of the simulation.\nIn this one-dimensional version, there are N cells numbered 0 through N-1.\nThe number of cells does not change at any point in the simulation.\nEach cell i is adjacent to cells i-1 and i+1.\nHere, the indices are taken modulo N meaning cells 0 and N-1 are also adjacent to eachother.\nAt each step of the simulation, cells with exactly one living neighbor change their status\n(alive cells become dead, dead cells become alive).\nFor example, if we represent dead cells with a \'0\' and living cells with a \'1\', consider\nthe state with 8 cells:01100101\nCells 0 and 6 have two living neighbors.\nCells 1, 2, 3, and 4 have one living neighbor.\nCells 5 and 7 have no living neighbors.\n\nThus, at the next step of the simulation, the state would be:00011101\nGiven some state of the game, your task is to determine the state immediately preceding it.\nIn some cases there may be more than one answer or no possible answer.\nInput\nInput will begin with an integer T<100, the number of test cases.\nEach test case consists of a single line, with between 3 and 50 characters, inclusive.\nEach character will be either \'0\' or \'1\'.\nEach \'0\' represents a dead cell, and each \'1\' represents an alive cell.\nOutput\nFor each test case, output the state of the game that precedes the given state.\nIf there is no possible solution, print "No solution" (quotes for clarity only).\nIf there are multiple possible solutions, print "Multiple solutions" (quotes for clarity only).\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4\n00011101\n000\n000001\n11110\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n01100101\nMultiple solutions\nNo solution\n10010\n\n\n\n\n\nAuthor:\ndavid_adm\n\n\nTester:\nfriggstad\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/LIFE\n\n\nTags:\n\n               \n                 Bitwise Operation, ad-hoc\n                 \n                     \n                     Mathematics, Bit Manipulation, Algorithms, Constructive\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n1902\n\n\nDate Added:\n10-11-2010\n\n\nTime Limit:\n0.253333 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'