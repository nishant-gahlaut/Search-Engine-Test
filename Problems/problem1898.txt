b'\nRead problems statements in Mandarin Chinese, Russian and Vietnamese as well.\nChef likes solving problems involving a lot of queries with prime numbers. One day, he found a new problem which is difficult for him to solve. So, he needs your help to solve it.\nGiven an array a of N integers and Q queries where each query provides you with four integers L, R, X and Y. \n For each query, output the value of F(L, R, X, Y) as defined below. \n\nF(L, R, X, Y) {\n\n     result := 0\n     for( i = X to i = Y )  {\n         if( isPrime(i) ) {\n             for( j = L to j = R ) {\n                  number := a[j]\n                  exponent := 0\n                  while( number % i == 0 ) {\n                     exponent := exponent + 1 \n                     number := number/i\n                  }\n                  result := result + exponent\n              }\n         }\n     }\n     return result\n}\n\n\n\nisPrime(x) returns true if x is Prime otherwise false.\n\n\nInput\n\nFirst line of the input contains a single integer N denoting the number of elements in a given array.\nNext line contains N integers separated by a space, which denotes a[1], a[2], ..., a[n]. \nThird line contains Q denoting the number of queries.\nNext Q lines contain four integers L , R , X , Y   separated by a space.\n\nOutput\n Output the value for each F(L, R, X, Y) in a separate line.\nConstraints\n\n1 \xe2\x89\xa4 N, Q  \xe2\x89\xa4 105\n1 \xe2\x89\xa4 L \xe2\x89\xa4 R \xe2\x89\xa4 N \n1 \xe2\x89\xa4 X \xe2\x89\xa4 Y \xe2\x89\xa4 106 \n2 \xe2\x89\xa4 a[i] \xe2\x89\xa4 106 , where 1 \xe2\x89\xa4 i \xe2\x89\xa4 N \n\nSubtasks  \n\nSubtask #1 (10 points): 1 \xe2\x89\xa4 N, Q \xe2\x89\xa4 100 \nSubtask #2 (20 points): 1 \xe2\x89\xa4 N, Q \xe2\x89\xa4 1000 \nSubtask #3 (70 points): Original constraints \n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n4 \n2 3 4 5\n2\n1 3 2 3\n1 4 2 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n4\n5\n\n\nExplanation\nQuery 1 :\nThe first prime is 2. 2 divides the first element 1 time, 2 divides the second element 0 times and 2 divides the third element 2 times. Hence 2 contributes a total of 3 to the result ( 1 + 0  + 2 = 3 ) \nThe second prime is 3. 3 divides the first element 0 times, 3 divides the second element 1 time and 3 divides the third element 0 times. Hence it contributes 1 to the result ( 0 + 1 + 0 = 1 )  \nThe final answer is the sum of the contributions, which is 4  (3 + 1 = 4)\n\nQuery 2 : \nThe first prime we consider is 2. 2 divides the first element in our range 1 time, 2 divides the second element 0 times, 2 divides the third element 2 times and 2 divides the fourth element 0 times. Thus 2 contributes a total of 3 to the result ( 1 + 0  + 2 + 0 = 3 ) \nThe second prime in our [X, Y] range is 3. 3 divides the first element 0 times, 3 divides the second element 1 time, 3 divides the third element 0 times and 3 divides the fourth element 0 times. Thus 3 contributes a total of 1 ( 0 + 1 + 0 + 0 = 1 )  \nThe third prime is 5.  5 divides the first element 0 times , 5 divides the second element 0 times, 5 divides the third element 0 times and 5 divides the fourth element 1 time. So 5 contributes 1 ( 0 + 0 + 0 + 1 = 1 ) \nThe final answer is the sum of all the contributions, which is 5 ( 3 + 1 + 1 = 5)\n Note : Use fast I/O due to large input files \n\n\n\nAuthor:\n5\xe2\x98\x85vipsharmavip\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/PRMQ\n\n\nTags:\n\n               \n                 Persistent Segment Trees, Segment Trees, Sieve of Eratosthenes\n                 \n                     \n                     Advanced Data Structures, Persistent Structures, Advanced Tree Structures, Mathematics, Number Theory\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2138\n\n\nDate Added:\n27-03-2017\n\n\nTime Limit:\n1 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'