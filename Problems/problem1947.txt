b'\nChefland scientists have made a new invention! They developed a new way to represent a string with N symbols: consider a tree with N vertices, rooted at the first vertice. For each vertice, a single latin letter is written. So we have obtained a "treestring". The scientists haven\'t decided yet how the treestring should be pronounced, but they have invented a definition of a substring for a treestring. A string is a substring of a treestring if and only it can be obtained by moving from some vertice to its descendant and writing out all the letters from vertices that occured on this path in the order they have appeared. For example, consider the following treestring :\n\n\n\nThe string "ba" is a substring of a given treestring because it can be obtained by moving from vertice 4 to vertice 6, the string "abb" is also a substring of this treestring - it can be obtained by moving from the root to vertice 5. However the string "cb" is not a substring of this treestring because there is no way from any vertice to its descendant in such a way that the sequence of letters is "cb".\n\nNow the Chefland researchers ask you to help them with the treestring research. \nThey have given you a treestring with N vertices. \nPlease output the number of distinct substrings of a given treestring (including the empty one). \nThen, Q queries will follow. \nFor the i-th query, the permutation Pi of 26 latin alphabet letters and an integer Ki will be given.\nThat means that if we sort all distinct substrings of the given treestring according to the alphabetical order described in Pi, you will have to output the Ki-th string.\n"According to the alphabetical order described in Pi" means that letter X is lexicographically smaller that letter Y if and only X appears\nin Pi earlier than Y. For example if the alphabetical order is "cbadefghijklmnopqrstuvwxyz", then letter "c" is lexicographically smaller than letter "a" because "c" is the first symbol of this permutation, and "a" is the third symbol of this permutation, therefore 1<3 and for the given arrangement, "c" is alphabetically less than "a".\nHere note that the string A is smaller than the string B (that means A comes earlier than B\nafter sorting) if and only if\nA is a prefix of B,\nor Ai = Bi (for all i < k) and Ak < Bk (in terms of alphabetical order)\nwhere Ai denotes the i-th letter of A.\n\nConstraints\n\n1<=N<=250000\n1<=Q<=50000\n1<=Ki<=9223372036854775807 (2^63-1)\nOutput will not exceed 800 KB.\nIt is guaranteed that the N lowercase latin letters have been generated randomly.\n\nInput\nThe first line of input consists of two integers - N and Q.Then, a string composed of N lowercase latin letters follow.\nThen, N-1 lines follow. Each line is composed of two numbers - Xi and Yi. It means that there is an edge between vertice Xi and vertice Yi.\nThen, Q lines follow. Each line consists of a permutation of 26 lowercase latin letters Pi and an integer Ki.\n\nOutput\nOutput Q+1 lines. On the first line output a single integer - the number of distinct substrings of a given treestring. The following Q lines should contain answers to the queries. I-th line should contain an answer to i-th query or a string "-1" if it is impossible\nto find Ki-th string for i-th query.\n\nExample\nInput:\n8 4\nabcbbaca\n1 2\n2 3\n1 4\n4 5\n4 6\n4 7\n1 8\nabcdefghijklmnopqrstuvwxyz 5\nabcdefghijklmnopqrstuvwxyz 1\nbcadefghijklmnopqrstuvwxyz 5\nabcdefghijklmnopqrstuvwxyz 100\n\nOutput:\n12\naba\n\nba\n-1\n\n\n\n\nAuthor:\nsergey_adm\n\n\nTester:\n6\xe2\x98\x85laycurse\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/TSUBSTR\n\n\nTags:\n\n               \n                 Suffix Automaton\n                 \n                     \n                     Advanced Data Structures, Suffix Structures\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2883\n\n\nDate Added:\n1-03-2012\n\n\nTime Limit:\n0.514221 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'