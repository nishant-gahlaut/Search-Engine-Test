b'\nA Little Elephant from the Zoo of Lviv likes lucky strings, i.e., the strings that consist only of the lucky digits 4 and 7.\nThe Little Elephant has the string S such that each character in S is either the lucky digit (4 or 7) or the question mark ?. He can replace each question mark with one of the lucky digits in order to obtain the lucky string. He wants to know the number of different ways he can do this such that the resulting lucky string has no more than K different substrings. Help him and find this number. Note, that he need to replace all question marks.\nConsider some example. From the string 47?4? we can obtain four lucky strings by replacing question marks with the lucky digits: 47444, 47447, 47744 and 47747. The corresponding numbers of different substrings are 11, 11, 12 and 11. For example, all different substrings of the string 47447 are 4, 7, 44, 47, 74, 447, 474, 744, 4744, 7447 and 47447.\n\nNotes.\n\nLet S be some lucky string. Then\n\n\n|S| denotes the length of the string S;\n\nS[i] (1 \xe2\x89\xa4 i \xe2\x89\xa4 |S|) denotes the ith character of S (the numeration of characters starts from 1);\n\nThe string T of the length M is called a substring of S if for some k from 0 to |S| - M we have \nT[1] = S[k + 1], T[2] = S[k + 2], ..., T[M] = S[k + M].\n\nInput\nThe first line of the input file contains a single positive integer T, the number of test cases. T test cases follow. The first line of each test case contains two space separated integers N and K. The second line contains the string S of the length N.\n\nOutput\n For each test case output a single line containing the answer for the corresponding test case.\n\nConstraints\n 1 \xe2\x89\xa4 T \xe2\x89\xa4 4747 \n 1 \xe2\x89\xa4 N, K \xe2\x89\xa4 50 \n For each string S from the input file we have that |S| = N and each character in S is either the lucky digit (4 or 7) or the question mark ?.\nExample\nInput:\n2\n2 2\n??\n3 7\n?4?\n\nOutput:\n2\n4\n\n\n\n\n\nAuthor:\n2\xe2\x98\x85witaliy_adm\n\n\nTester:\n6\xe2\x98\x85anton_lunyov\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/LUCKFILL\n\n\nTags:\n\n               \n                 Pre processing, Recursion, Observation, Brute Force\n                 \n                     \n                     Advanced Algorithms, Algorithms\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2697\n\n\nDate Added:\n27-01-2012\n\n\nTime Limit:\n0.275 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'