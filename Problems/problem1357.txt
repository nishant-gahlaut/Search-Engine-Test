b'\n Read problems statements in Mandarin Chinese, Russian and Vietnamese as well.\nChef likes arrays and anything related to it. He call an array V dominating if there exists a number x (the dominator) whose number of occurrences in V  strictly greater than half the size of the array (that is, floor(|V|/2)).\n\nHis friend Dmytro wants to make Chef happy, so he presented this interesting problem for Chef.\nGiven an array A. You have to process Q queries on it. Queries can be one of two types:\n\n 1 x y  - Assign value y to x-th element in array A, i.e. Ax = y.\n2 l r  - print "Yes" if subarray A[l..r] is dominating, "No" otherwise\n\n\nInput\nThe first line of input contains two integers N and Q denoting the number of elements in A, and the number of queries to be executed.\nThe second line of input contains N space separated integers denoting the array A.\nEach of the next Q lines contains one query.\nOutput\nFor each query of type 2, output the answer to the query in a single line.\nConstraints\n\n1 \xe2\x89\xa4 N, Q \xe2\x89\xa4 105\n1 \xe2\x89\xa4 Ai, y \xe2\x89\xa4 109\n1 \xe2\x89\xa4 x  \xe2\x89\xa4 N\n1 \xe2\x89\xa4 l  \xe2\x89\xa4  r  \xe2\x89\xa4 N\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n5 8\n1 2 3 2 1\n2 1 5\n2 2 4\n1 3 2\n2 1 5\n1 2 3\n2 1 5\n1 3 1\n2 1 5\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\nNo\nYes\nYes\nNo\nYes\n\n\nExplanation\nFor first query, we have to tell whether the entire array A is dominating or not. It turns out that it is not dominating, because occurrences of 1 and 2 are equal to 2 (which is not more than half the size of array, i.e. 2) and that of 3 is 1.\nFor second query, the subarray [2, 3, 2] is dominating and 2 is the dominator of it. Number of occurrences of 2 is 2 which is strictly greater than half the size of subarray, i.e. floor(3/2) = 1.\n\n\n\nAuthor:\n6\xe2\x98\x85mgch\n\n\nTester:\n3\xe2\x98\x85karanaggarwal\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/CHEFLKJ\n\n\nTags:\n\n               \n                 Hashmaps, Lazy Propagation\n                 \n                     \n                     Data Structures, Advanced Data Structures, Advanced Tree Structures, Segment Trees\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2659\n\n\nDate Added:\n10-07-2016\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nPYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, PERL, SCALA, LUA, BASH, JS, LISP sbcl, PAS gpc, BF, CLOJ, D, CAML, FORT, ASM, FS, WSPC, LISP clisp, SCM guile, PERL6, ERL, CLPS, PRLG, ICK, NICE, ICON, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'