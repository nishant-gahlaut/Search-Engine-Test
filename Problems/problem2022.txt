b'\nRead problem statements in Hindi, Bengali, Mandarin Chinese, Russian, and Vietnamese  as well.\nThis is a sequel to the problem "Move the Coins" with a couple of twists!\nAlice and Bob are playing a board game. The board is a tree TboardTboard with NN nodes (numbered 11 through NN). The game involves moving some coins around the board. For a node RR (1\xe2\x89\xa4R\xe2\x89\xa4N1\xe2\x89\xa4R\xe2\x89\xa4N), let\'s define a game g(Tboard,R)g(Tboard,R) with the following rules:\n\nInitially, a copy of TboardTboard is taken and for each valid vv, cvcv coins are placed in the node vv.\nBob and Alice alternate turns; Alice plays first.\nIn each turn, the current player must take a single coin from some node other than RR (let\'s denote it by CC) and move it to another node which lies on the path between RR and CC (including RR, but not including CC).\nIf a player cannot move a coin during their turn (i.e. all the coins are in the node RR), this player loses the game.\n\nFor example, for the board in the figure below and R=1R=1:\n\nThe current player may take a coin from one of the nodes 22, 44 or 55 (if there were any coins in node 33, taking one of those would also be an option). If they take a coin from node 55, they can move it XX steps towards the node R=1R=1, where XX is either 11, 22 or 33 and the coin ends up in the node 44, 22 or 11, respectively:\n\nLet\'s assume that they pick X=2X=2, so they move the coin to node 22. At the end of this turn, the board is\n\nand it is the other player\'s turn.\nBoth players play optimally. Bob knows some elementary Game Theory, so he is able to very quickly predict the winner of any game. Unimpressed, Alice gives him a harder task: she challenges him to find the winner of g(Tboard,R)g(Tboard,R) for each valid RR (1\xe2\x89\xa4R\xe2\x89\xa4N1\xe2\x89\xa4R\xe2\x89\xa4N).\nCan you help Bob figure out the answer? Specifically, if WW is the set of all valid RR such that the winner of g(Tboard,R)g(Tboard,R) is Bob, then you must calculate \xe2\x88\x91R\xe2\x88\x88W2R\xe2\x88\x91R\xe2\x88\x88W2R modulo 109+7109+7.\nInput\n\nThe first line of the input contains a single integer TT denoting the number of test cases. The description of TT test cases follows.\nThe first line of each test case contains a single integer NN.\nEach of the next N\xe2\x88\x921N\xe2\x88\x921 lines contains two space-separated integers uu and vv denoting that nodes uu and vv are connected by an edge.\nThe last line contains NN space-separated integers c1,c2,\xe2\x80\xa6,cNc1,c2,\xe2\x80\xa6,cN.\n\nOutput\nFor each test case, print a single line containing one integer \xe2\x80\x95 the sum of 2R2R over all valid RR such that the winner of g(Tboard,R)g(Tboard,R) is Bob, modulo 109+7109+7.\nConstraints\n\n1\xe2\x89\xa4T\xe2\x89\xa41,0001\xe2\x89\xa4T\xe2\x89\xa41,000\n1\xe2\x89\xa4N\xe2\x89\xa4300,0001\xe2\x89\xa4N\xe2\x89\xa4300,000\n1\xe2\x89\xa4u,v\xe2\x89\xa4N1\xe2\x89\xa4u,v\xe2\x89\xa4N\n0\xe2\x89\xa4ci\xe2\x89\xa4160\xe2\x89\xa4ci\xe2\x89\xa416 for each valid ii\nthe sum of NN over all test cases does not exceed 300,000300,000\n\nSubtasks\nSubtask #1 (5 points): \n\nT\xe2\x89\xa410T\xe2\x89\xa410\nN\xe2\x89\xa410N\xe2\x89\xa410\nci\xe2\x89\xa46ci\xe2\x89\xa46 for each valid ii\nc1+c2+\xe2\x80\xa6+cN\xe2\x89\xa410c1+c2+\xe2\x80\xa6+cN\xe2\x89\xa410\n\nSubtask #2 (10 points): \n\nT\xe2\x89\xa4100T\xe2\x89\xa4100 \nN\xe2\x89\xa41,000N\xe2\x89\xa41,000\n\nSubtask #3 (85 points): original constraints\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2\n3 \n1 2\n2 3\n1 0 1\n6\n1 2\n1 3\n4 3\n3 5\n4 6\n0 2 2 1 3 2\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n4\n14\n\n\nExplanation\nAlthough the tree TboardTboard is undirected, arrows have been added along edges for clarity, indicating the directions in which coins must be moved for each RR. The node RR itself is always highlighted in red.\nExample case 1: The original TboardTboard looks like this:\n\nLet\'s examine the games for R=1,2,3R=1,2,3.\n\nFor R=1R=1, Alice turns out to be the winner. On the first turn, she has two possible moves: move the coin from node 33 to node 22 or to node 11. If she does the latter, then at the end of her turn, all coins are in node RR, meaning that Bob is unable to move a coin during the next turn and Alice is the winner; since she is playing optimally, she does precisely that :)\nFor R=2R=2: Bob gets his revenge this time! Alice has two possible initial moves: move the coin from node 11 to node 22, or move the coin from node 33 to node 22. In either case, at the end of her turn, there is exactly one coin remaining in a node other than RR. Bob merely has to move this coin to RR to leave Alice with no possible moves on her turn.\nFor R=3R=3, Alice wins again, using very similar reasoning to the R=1R=1 case (her winning move this time around is to move the coin from node 11 to node 33).\nWe\'ve figured out the winner of g(Tboard,R)g(Tboard,R) for all valid RR, and it turns out that Bob only wins one game, when R=2R=2; thus the answer is 22%(109+7)=422%(109+7)=4.\nExample case 2: The original TboardTboard looks like this:\n\nThe boards for R=1,2,3,4,5,6R=1,2,3,4,5,6 are, respectively:\n\n\n\n\n\n\nIt can be proved that Bob wins g(Tboard,1)g(Tboard,1), g(Tboard,2)g(Tboard,2) and g(Tboard,3)g(Tboard,3), while Alice wins g(Tboard,4)g(Tboard,4), g(Tboard,5)g(Tboard,5) and g(Tboard,6)g(Tboard,6). The answer is (21+22+23)%(109+7)=14(21+22+23)%(109+7)=14.\n\n\n\nAuthor:\n6\xe2\x98\x85ssjgz\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/MOVCOIN2\n\n\nTags:\n\n               \n                 bitwise-operation, centroid-decomposition, hard, sept20, sprague-grundy, ssjgz, ssjgz, xor\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n3154\n\n\nDate Added:\n17-04-2020\n\n\nTime Limit:\n5 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'