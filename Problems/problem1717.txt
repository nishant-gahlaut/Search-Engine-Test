b'\nYou have an N\xc3\x97M grid. The grid can be filled with the values 0 and 1 only. Initially, all the cells of the grid are filled with value 0.  \nYou start from the cell (1,1). When you are at position (i,j), you can do one of the following: \n\nChange A(i,j) to 1 and go to cell (i+1,j+1).\nKeep A(i,j) as 0 and go to cell (i+1,j) or (i,j+1). \n\nIf, at some point, you are out of the grid, the process ends. \nLet S denote the set of all distinct matrices that can be created using the method explained above.  \nLet f(T) be the number of ways to place any (possibly zero) number of rooks in the grid T such that both the following conditions are satisfied:\n\nNo two rooks attack each other.\nNo rook is placed in a cell (i,j) such that T(i,j)=1. \n\nFind the value of \xe2\x88\x91f(T) where T\xe2\x88\x88S. Since the answer can be huge, print it modulo 998244353.\nNote:\n\nTwo matrices A and B are different if there exists some cell (i,j) such that A(i,j)\xe2\x89\xa0B(i,j).\nTwo ways of arranging rooks is different if there exists a cell (i,j) such that a rook is placed in the cell (i,j) in one way and the cell (i,j) is empty in the other way.\nTwo rooks attack each other if they share the same row or the same column.\n\nInput Format\nThe first and only line of input consists of two integers N and M, the dimensions of the grid.\nOutput Format\nPrint a single line containing one integer - the value of \xe2\x88\x91f(T) where T\xe2\x88\x88S modulo 998244353.\nConstraints\n\n1\xe2\x89\xa4N,M\xe2\x89\xa42\xe2\x8b\x85105\n\nSubtasks\n\nSubtask 1 (30 points): 1\xe2\x89\xa4N,M\xe2\x89\xa42000\nSubtask 2 (70 points): Original constraints.\n\n\n                        Sample Input 1\n                        \n\n\n\n\n\n2 1\n\n\n\n                        Sample Output 1\n                        \n\n\n\n\n\n7\n\n\nExplanation\nWe can create 3 distinct matrices:\n\n[1,0] : Start from (1,1) and change A(1,1) to 1. Thus, you move to cell (2,2). This cell is out of the matrix. Therefore, the process ends.\n[0,1]: Start from (1,1) and keep A(1,1) as 0. Move to cell (1,2). Change A(1,2) to 1. Thus, you move to cell (2,3). This cell is out of the matrix. Therefore, the process ends.\n[0,0]: This matrix is generated in three cases:\nStart from (1,1) and keep A(1,1) as 0. Move to cell (1,2) and keep A(1,2) as 0. Move to cell (1,3). This cell is out of the matrix. Therefore, the process ends.\nStart from (1,1) and keep A(1,1) as 0. Move to cell (1,2) and keep A(1,2) as 0. Move to cell (2,2). This cell is out of the matrix. Therefore, the process ends.\nStart from (1,1) and keep A(1,1) as 0. Move to cell (2,1). This cell is out of the matrix. Therefore, the process ends.\n\nThus, S={[1,0],[0,1],[0,0]}. Calculating the number of ways to place rooks while satisfying both conditions:\n\nT=[1,0]: There are 2 ways to place rooks:\nPlace 0 rooks in the matrix.\nPlace 1 rook in the cell (1,2). Since there is only one rook, no two rooks attack each other. Also, the cell in which the rook is placed has value 0. \nT=[0,1]: There are 2 ways to place rooks:\nPlace 0 rooks in the matrix.\nPlace 1 rook in the cell (1,1). Since there is only one rook, no two rooks attack each other. Also, the cell in which the rook is placed has value 0. \nT=[0,0]: There are 3 ways to place rooks:\nPlace 0 rooks in the matrix.\nPlace 1 rook in the cell (1,2). Since there is only one rook, no two rooks attack each other. Also, the cell in which the rook is placed has value 0. \nPlace 1 rook in the cell (1,1). Since there is only one rook, no two rooks attack each other. Also, the cell in which the rook is placed has value 0. \n\nThe total answer is the sum of number of ways in which we can place rooks over all the matrices. Thus, the answer is 2+2+3=7.\n\n                        Sample Input 2\n                        \n\n\n\n\n\n429 578\n\n\n\n                        Sample Output 2\n                        \n\n\n\n\n\n122620743\n\n\nExplanation\nThis example has a beautiful explanation. Unfortunately, it is too long to write.\n\n\n\nAuthor:\n5\xe2\x98\x85tibinyte\n\n\nEditorial:\nhttps://discuss.codechef.com/problems/SUSROOKS\n\n\nTags:\n\n               \n                 Combinatorics, NTT\n                 \n                     \n                     Mathematics, Transformations\n                 \n               \n             \n             \n\n\n\n                        Difficulty Rating:\n                    \n\n2996\n\n\nDate Added:\n14-03-2022\n\n\nTime Limit:\n2 secs\n\n\nSource Limit:\n50000 Bytes\n\n\nLanguages:\nCPP17, PYTH 3.6, JAVA, C, CPP14, PYTH, PYP3, CS2, ADA, PYPY, TEXT, PAS fpc, NODEJS, RUBY, PHP, GO, HASK, TCL, kotlin, PERL, SCALA, LUA, BASH, JS, rust, LISP sbcl, PAS gpc, BF, CLOJ, R, D, CAML, swift, FORT, ASM, FS, WSPC, LISP clisp, SQL, SCM guile, PERL6, ERL, CLPS, PRLG, SQLQ, ICK, NICE, ICON, COB, SCM chicken, PIKE, SCM qobi, ST, NEM\n\n\n\n\n\nSubmit\n\n'